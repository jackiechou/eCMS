@model Eagle.Model.SYS.FileViewModel
<link href="~/Scripts/plugins/plupload/css/upload-style.css" rel="stylesheet" />
@*<script type="text/javascript" src="~/Scripts/jquery-1.11.1.js" charset="UTF-8"></script>*@
@*<script src="~/Scripts/plugins/plupload/js/jquery.plupload/plupload.full.js"></script>*@
<script src="~/Scripts/plugins/plupload/js/plupload.full.min.js"></script>
<script src="~/Scripts/jquery-progressbar.min.js"></script>                      

<div class="upload-form" id="uploader"> 
    <!-- Form Heading -->
    <h1 class="replace-text">Upload Form</h1>
    <a href="#" class="close" title="Close Window"><div id="closeButton" class="closeButton" title="Close"></div></a> 
    <input type="hidden" id="folderKey" name="folderKey" value="@Model.FolderKey" />
    <input type="hidden" id="fileId" name="fileId" value="@Model.FileId"/>
    <div class="plupload_wrapper plupload_scroll">
        <div class="plupload_container">
            <div class="plupload">
                <!-- Select & Upload Button -->
                <div class="plupload_header">
                    <div class="plupload_header_content">
                        <div class="plupload_header_title">Select files</div>
                        <div class="plupload_header_text">Add files to the upload queue and click the start button</div>                      
                    </div>
                </div>

                <!-- File List -->
                <div id="filelist" class="cb plupload_content">
                    <div class="plupload_filelist_header">
                        <div class="plupload_file_name">Filename</div>
                        <div class="plupload_file_action">&nbsp;</div>
                        <div class="plupload_file_status"><span>Status</span></div>
                        <div class="plupload_file_size">Size</div>
                        <div class="plupload_clearer">&nbsp;</div>
                    </div>
                    <ul id="plupload_filelist" class="plupload_filelist"></ul> 
                    <div class="cb plupload_filelist_footer">
                        <div class="plupload_file_name">
                            <div class="plupload_buttons">
                                <a href="#" class="plupload_button plupload_add" id="pickfiles">Add Files</a>
                                <a href="#" class="plupload_button plupload_start" id="uploadfiles">Start Upload</a>
                            </div>
                            <div id="console" style="float:left"><span id="runtime" style="display:none"></span></div>
                            <span class="plupload_upload_status"></span>
                        </div>
                        <div class="plupload_file_action"></div>
                        <div class="plupload_file_status"><span class="plupload_total_status">0%</span></div>
                        <div class="plupload_file_size"><span class="plupload_total_file_size">0 b</span></div>
                        <div class="plupload_progress">
                            <div class="plupload_progress_container">
                                <div class="plupload_progress_bar"></div>
                            </div>
                        </div>
                        <div class="plupload_clearer">&nbsp;</div>
                    </div>
                </div>  
            </div>
             <!-- Progress Bar -->
            <div id="progressbar"></div>            
 
            <!-- Close After Upload -->
            <div id="closeAfter">
                <span class="checkbox">
                    <input type="checkbox" name="checkbox" id="checkbox">
                    <label for="checkbox">Close window after upload</label>
                </span>
            </div>             
        </div>
        <input type="hidden" id="uploader_count" name="uploader_count" value="0" /> 
        <input type="hidden" id="mode" name="mode" value="1" />
    </div>
</div>

<script type="text/javascript">
    /* Upload Form Configuration Here */
    $(function () {
        var fileId = $("input[type=hidden][name=fileId]").val();
        var folderKey = $("input[type=hidden][name=folderKey]").val();
        var image_extensions = ['.jpg', '.JPG', '.gif', '.GIF', '.png', '.PNG', '.jpeg', '.JPEG'];
        settingCheckBox();
        var mode = 0;
        // Settings ////////////////////////////////////////////////
        var uploader = new plupload.Uploader({
            runtimes: 'html5,flash,silverlight,html4', // Set runtimes, here it will use HTML5, if not supported will use flash, etc.
            browse_button: 'pickfiles', // The id on the select files button
            autostart: false, //Automatically start upload when files added
            multi_selection: false, // Allow to select one file each time
            multipart: true,
            prevent_duplicates: true,
            unique_names: true,           
            // Rename files by clicking on their titles
            rename: true,

            // Sort files
            sortable: true,

            // Enable ability to drag'n'drop files onto the widget (currently only HTML5 supports that)
            dragdrop: true,
            //resize: {
            //    width: 100,
            //    height: 100,
            //    crop: true,
            //    quality: 70
            //},
            drop_element: 'uploader',
            // Views to activate
            views: {
                list: true,
                thumbs: true, // Show thumbs
                active: 'thumbs'
            },
            container: 'uploader', // The id of the upload form container
            max_file_size: '10mb', // Maximum file size allowed
            chunk_size: '1mb',
            url: "/Handlers/UploadMultipleFileHandler.ashx?folderKey=" + folderKey + "&fileId=" + fileId, // The url to the upload.php file
            flash_swf_url: 'Scripts/plugins/plupload/js/Moxie.swf', // The url to thye flash file
            silverlight_xap_url: 'Scripts/plugins/plupload/js/Moxie.xap', // The url to the silverlight file
            //flash_swf_url: 'Scripts/plugins/plupload/js/jquery.plupload/plupload.flash.swf', // The url to thye flash file
            //silverlight_xap_url: 'Scripts/plugins/plupload/js/jquery.plupload/plupload.silverlight.xap', // The url to the silverlight file
           // filters: [{ title: "Image files", extensions: "jpg,gif,png" }] // Filter the files that will be showed on the select files window
        });
        uploader.bind("PostInit", function (up, file) {
            // features are populated only after input components are fully instantiated
            if (up.settings.dragdrop && up.features.dragdrop) {
                $('.plupload_filelist').append('<li class="plupload_droptext">Drag files here.</li>');
            }         
 
            //up.on("dragover", function(e) {
            //    up.addClass('dragover');
            //})
            //.on("dragleave", function(e) {
            //    up.removeClass('dragover');
            //})
            //.on("drop", function(e) {
            //    up.removeClass('dragover');
            //});
        });
        // RUNTIME
        uploader.bind('Init', function (up, params) {
            $('#runtime').text(params.runtime);
            if ($('#mode').val() == 1)
                getFileList(up);
        });

        // Start Upload ////////////////////////////////////////////
        // When the button with the id "#uploadfiles" is clicked the upload will start
        $('#uploadfiles').click(function (e) {
            uploader.start();
            e.preventDefault();
        });

        uploader.init(); // Initializes the Uploader instance and adds internal event listeners.
        uploader.bind("UploadFile", function (up, file) {
            $('#' + file.id).addClass('plupload_current_file');
        });


        // Selected Files //////////////////////////////////////////
        // When the user select a file it wiil append one div with the class "addedFile" and a unique id to the "#filelist" div.
        // This appended div will contain the file name and a remove button
        uploader.bind('FilesAdded', function (up, files) {
            //$.each(files, function (i, file) {
            //    //var parts = /^(.+)(\.[^.]+)$/.exec(file.name);
            //    //var ext = parts[2];

            //    //if (image_extensions.indexOf(ext) > -1)
            //    //    alert("aaaaaaaaaa");
            //    //else
            //    //    alert("bbbbbbbbbbbb");
            //    $('#plupload_filelist').append('<li class="addedFile" id="' + file.id + '">' + file.name + '<a href="#" id="' + file.id + '" class="removeFile"></a>' + '</li>');
            //});
            //
            // set an array of file names that are in the list
            var i = 0;
            while (i < files.length) {
                var dupe = false;
                var ii = 0;
                while (ii < (up.files.length - files.length)) {
                    if (files[i].name == up.files[ii].name) {
                        dupe = true;
                        up.removeFile(up.getFile(files[i].id));
                        /// added this line of code to remove the visual duplication from the queue
                        $('#' + files[i].id).remove();

                        files.splice(i, 1);
                        break;
                    }
                    ii++;
                }
                if (!dupe) { i++; }
            }
           
            updateList(uploader, uploader.files);
            up.refresh(); // Reposition Flash/Silverlight
            ////setTimeout(function () { up.start(); }, 100); => auto upload
        });
       
        uploader.bind('FileUploaded', function (up, file, info) {
            // Called when file has finished uploading
            // log('[FileUploaded] File:', file, "Info:", info);
            //$('#' + file.id).append('<div class="plupload_file_id"><input id="' + file.id + '_response" type="hidden" value="' + info.response + '" /></div>');
            
            handleStatus(file);
            //$('#' + file.id).children("a").attr("data-id", info.response);           
            $('#' + file.id).children('div.plupload_file_action').children('a').attr("data-id", info.response);
          
            //$('#' + file.id).attr("data-id", info.response);
            
            //check permission for delete event           
            if (FDelete == '1')
                //$('#' + file.id).children('a').addClass('isAllowedToRemove');
                $('#' + file.id).children('div.plupload_file_action').children('a').addClass('isAllowedToRemove');
            //if (FDelete != 1)
            //    $('#' + file.id).children('div.plupload_file_action').children('div').removeClass('plupload_action_icon');

            //up.refresh(); // Reposition Flash/Silverlight
        });

        uploader.bind('StateChanged', function () {
            if (uploader.state === plupload.STARTED) {
               
                $('li.plupload_delete a,div.plupload_buttons').hide();
                uploader.disableBrowse(true);

                $('span.plupload_upload_status,div.plupload_progress,a.plupload_stop').css('display', 'block');
                $('span.plupload_upload_status').html('Uploaded ' + uploader.total.uploaded + '/' + uploader.files.length + ' files');

               
                $('span.plupload_total_status,span.plupload_total_file_size').show();
               
            } else {
                //updateList(uploader, uploader.files);
                $('a.plupload_stop,div.plupload_progress').hide();
                $('a.plupload_delete').css('display', 'block');

                if (uploader.total.uploaded + uploader.total.failed == uploader.files.length) {
                    $(".plupload_buttons,.plupload_upload_status").css("display", "inline");
                    uploader.disableBrowse(false);

                    $(".plupload_start").addClass("plupload_disabled");
                    $('span.plupload_total_status,span.plupload_total_file_size').hide();
                }
            }
        });

        uploader.bind('FilesRemoved', function (up, file) {
            // since the whole file list is redrawn for every change in the queue
            // we need to scroll back to the file removal point to avoid annoying
            // scrolling to the bottom bug (see #926)
            var scrollTop = $('#' + file.id + '_filelist').scrollTop();
            updateList(up,up.files);
            $('#' + file.id + '_filelist').scrollTop(scrollTop);
        });

        // Error Alert /////////////////////////////////////////////
        // If an error occurs an alert window will popup with the error code and error message.
        // Ex: when a user adds a file with now allowed extension
        uploader.bind('Error', function (up, err) {
            //alert("Error: " + err.code + ", Message: " + err.message + (err.file ? ", File: " + err.file.name : "") + "");
            //up.refresh(); // Reposition Flash/Silverlight
            var file = err.file, message;

            if (file) {
                message = err.message;

                if (err.details) {
                    message += " (" + err.details + ")";
                }

                if (err.code == plupload.FILE_SIZE_ERROR) {
                    alert(_("Error: File too large:") + " " + file.name);
                }

                if (err.code == plupload.FILE_EXTENSION_ERROR) {
                    alert(_("Error: Invalid file extension:") + " " + file.name);
                }

                file.hint = message;
                $('#' + file.id).attr('class', 'plupload_failed').find('a').css('display', 'block').attr('title', message);
            }

            if (err.code === plupload.INIT_ERROR) {
                setTimeout(function () {
                    uploader.destroy();
                }, 1);
            }
        });

        // Remove file button //////////////////////////////////////
        // On click remove the file from the queue
        $('a.removeFile').live('click', function (e) {
            if ($(this).hasClass('isAllowedToRemove')) {
                var id = $(this).attr("data-id");
                DeleteFile(id);
            }
            uploader.removeFile(uploader.getFile(this.id));
            $('#' + this.id).remove();
            e.preventDefault();
        });

        $('a.isAllowedToRemove').live('click', function (e) {
            var id = $(this).attr("data-id");
            DeleteFile(id);
            $('span.plupload_upload_status').text('');
            //uploader.removeFile(uploader.getFile(this.id));
            //$('#' + this.id).remove();
            //e.preventDefault();
        });
        

        //// On click remove the file from the queue
        //$('a.removeFileItem').live('click', function (e) {
        //    uploader.removeFile(uploader.getFile(this.id));
        //    $('#' + this.id).remove();
        //    e.preventDefault();
        //});

        // Progress bar ////////////////////////////////////////////
        // Add the progress bar when the upload starts
        // Append the tooltip with the current percentage
        uploader.bind('UploadProgress', function (up, file) {
            //var progressBarValue = up.total.percent;
            //$('#progressbar').fadeIn().progressbar({
            //    value: progressBarValue
            //});
            //$('#progressbar .ui-progressbar-value').html('<span class="progressTooltip">' + up.total.percent + '%</span>');

            // Set file specific progress
            $('#' + file.id + ' div.plupload_file_status').html(file.percent + '%');
            
            handleStatus(file);
            updateTotalProgress(up);
        });

        // Close window after upload ///////////////////////////////
        // If checkbox is checked when the upload is complete it will close the window
        uploader.bind('UploadComplete', function () {
            if ($('.upload-form #checkbox').attr('checked')) {
                $('.upload-form').fadeOut('slow');
            }
        });

        // Close window ////////////////////////////////////////////
        // When the close button is clicked close the window
        $('.upload-form .close').on('click', function (e){
            $('.upload-form').fadeOut('slow');
            e.preventDefault();
        });

    }); // end of the upload form configuration

    function getFileList(uploader) {
        var fileId = '27,28,29,30';
        var baseUrl = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');
        $.ajax({
            type: "GET",
            url: baseUrl + "/Handlers/GetFileList.ashx?fileId=" + fileId,
            success: function (result) {               
                //bindData(uploader, JSON.parse(result));
                getData(uploader, JSON.parse(result));
            },
            error: function () {
                $('#plupload_filelist').html("There was error in invoking Ajax!");
            }
        });
    }

    function updateTotalProgress(uploader) {
        $('span.plupload_total_status').html(uploader.total.percent + '%');
        $('div.plupload_progress_bar').css('width', uploader.total.percent + '%');
        $('span.plupload_total_file_size').html(plupload.formatSize(uploader.total.size));
        $('span.plupload_upload_status').html('Uploaded ' + uploader.total.uploaded + ' of ' + uploader.files.length +' file(s)');

        //// Scroll to end of file list
        //uploader.filelist[0].scrollTop = uploader.filelist[0].scrollHeight;
        //uploader.progressbar.progressbar('value', uploader.total.percent);
    }

    function bindData(uploader, data) {
        var fileList = $('ul.plupload_filelist').html(''), inputCount = 0;
        
        $.each(data, function (i, file) {            
            inputHTML = '';
            inputHTML += '<input type="hidden" name="' + file.FileId + '_' + inputCount + '_name" value="' + plupload.xmlEncode(file.FileName) + '" />';
            inputHTML += '<input type="hidden" name="' + file.FileId + '_' + inputCount + '_status" value="done" />';

            inputCount++;

            $('#' + file.FileId + '_count').val(inputCount);         

            fileList.append(
            '<li id="' + file.FileId + '">' +
            '<div class="plupload_file_name"><span>' + file.FileName + '</span></div>' +
            '<div class="plupload_file_action"><a data-id="' + file.FileId + '" href="#"></a></div>' +
            '<div class="plupload_file_status">100%</div>' +
            '<div class="plupload_file_size">' + plupload.formatSize(file.Size) + '</div>' +
            '<div class="plupload_clearer">&nbsp;</div>' +
            inputHTML +
            '</li>'
            );            

            var icon = $('#' + file.FileId).attr('class', 'plupload_delete').find('a').css('display', 'block');

            if (FDelete == '1')
                $('#' + file.Id).children('div.plupload_file_action').children('a').addClass('isAllowedToRemove');

            $('#' + file.FileId + '.plupload_delete a').click(function (e) {
                DeleteFile(file.FileId);
                $('#' + file.FileId).remove();
                uploader.removeFile(file);

                e.preventDefault();
            });
        });
    }

    function getData(uploader, data) {
       
        var fileList = $('ul.plupload_filelist'), inputCount = 0;

        $.each(data, function (i, file) {
            inputHTML = '';
            inputHTML += '<input type="hidden" name="' + file.FileId + '_' + inputCount + '_name" value="' + plupload.xmlEncode(file.FileName) + '" />';
            inputHTML += '<input type="hidden" name="' + file.FileId + '_' + inputCount + '_status" value="done" />';

            inputCount++;

            $('#' + file.FileId + '_count').val(inputCount);

            fileList.append(
            '<li id="' + file.FileId + '">' +
            '<div class="plupload_file_name"><span>' + file.FileName + '</span></div>' +
            '<div class="plupload_file_action"><a data-id="' + file.FileId + '" href="#"></a></div>' +
            '<div class="plupload_file_status">100%</div>' +
            '<div class="plupload_file_size">' + plupload.formatSize(file.Size) + '</div>' +
            '<div class="plupload_clearer">&nbsp;</div>' +
            inputHTML +
            '</li>'
            );

            var icon = $('#' + file.FileId).attr('class', 'plupload_delete').find('a').css('display', 'block');

            if (FDelete == '1')
                $('#' + file.Id).children('div.plupload_file_action').children('a').addClass('isAllowedToRemove');

            $('#' + file.FileId + '.plupload_delete a').click(function (e) {
                DeleteFile(file.FileId);
                $('#' + file.FileId).remove();
                uploader.removeFile(file);

                e.preventDefault();
            });
        });

    }
    function updateList(uploader, files) {
        var fileList = $('ul.plupload_filelist').html(''), inputCount = 0;       

        $.each(files, function (i, file) {       
            inputHTML = '';

           // fileList.append('<li class="addedFile" id="' + file.id + '">' + file.name + '<a href="#" id="' + file.id + '" class="removeFile"></a>' + '</li>');

            if (file.status == plupload.DONE) {
                if (file.target_name) {
                  inputHTML += '<input type="hidden" name="' + file.id + '_' + inputCount + '_tmpname" value="' + plupload.xmlEncode(file.target_name) + '" />';
                }

                inputHTML += '<input type="hidden" name="' + file.id + '_' + inputCount + '_name" value="' + plupload.xmlEncode(file.name) + '" />';
                inputHTML += '<input type="hidden" name="' + file.id + '_' + inputCount + '_status" value="' + (file.status == plupload.DONE ? 'done' : 'failed') + '" />';

                inputCount++;

                $('#' + file.id + '_count').val(inputCount);
            }

            fileList.append(
            '<li id="' + file.id + '">' +
            '<div class="plupload_file_name"><span>' + file.name + '</span></div>' +
            '<div class="plupload_file_action"><a href="#"></a></div>' +
            '<div class="plupload_file_status">' + file.percent + '%</div>' +
            '<div class="plupload_file_size">' + plupload.formatSize(file.size) + '</div>' +
            '<div class="plupload_clearer">&nbsp;</div>' +
            inputHTML +
            '</li>'
            );

            handleStatus(file);

            $('#' + file.id + '.plupload_delete a').click(function (e) {
                $('#' + file.id).remove();
                uploader.removeFile(file);

                e.preventDefault();
            });
        });

        if($('#mode').val()==1)
            getFileList(uploader);
    }

    function DeleteFile(fileId) {
        //var baseUrl = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');
        //$.ajax({
        //    type: "POST",
        //    url: baseUrl + "/Handlers/DeleteFile.ashx?fileId=" + fileId,
        //    success: function (result) {
        alert(fileId);
        //    },
        //    error: function () {
        //        $('#console').html("There was error in deleting file!");
        //    }
        //});
    }

    function handleStatus(file) {
        var actionClass;

        if (file.status == plupload.DONE) {
            actionClass = 'plupload_done';
        }

        if (file.status == plupload.FAILED) {
            actionClass = 'plupload_failed';
        }

        if (file.status == plupload.QUEUED) {
            actionClass = 'plupload_delete';
        }

        if (file.status == plupload.UPLOADING) {
            actionClass = 'plupload_uploading';
        }

        var icon = $('#' + file.id).attr('class', actionClass).find('a').css('display', 'block');
        if (file.hint) {
            icon.attr('title', file.hint);
        }
    }
    // Check Box Styling
    function settingCheckBox() {
        var checkbox = $('.upload-form span.checkbox');

        // Check if JavaScript is enabled
        $('body').addClass('js');

        // Make the checkbox checked on load
        // checkbox.addClass('checked').children('input').attr('checked', true);
        checkbox.children('input').attr('checked', false);

        // Click function
        checkbox.on('click', function () {

            if ($(this).children('input').attr('checked')) {
                $(this).children('input').attr('checked', false);
                $(this).removeClass('checked');
            }

            else {
                $(this).children('input').attr('checked', true);
                $(this).addClass('checked');
            }

        });
    }  
</script>
