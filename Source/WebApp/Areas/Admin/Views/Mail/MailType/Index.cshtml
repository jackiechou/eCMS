@{
    ViewBag.Title = Eagle.Resource.LanguageResource.MailType;
    Layout = Request.IsAjaxRequest() ? null : Eagle.Repository.UI.Layout.LayoutType.MainLayout; 
}
@section ContentSection
{
<div id="MainBody" class="main_box">   
    <div id="alertMessageBox">
        @if (ViewBag.DisplayErrorMessage == true)
        {
            <div class="@ViewBag.CssClass    ">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>@ViewBag.SortMessage !</strong>
                <div class="padding-left">
                    @Html.Raw(Server.HtmlDecode(ViewBag.Message))
                </div>
            </div>
        }
    </div>
   
    <div id="out-box" class="row">
        <!--/left_box-->
        <div id="left_box" class="col-md-4">
            <div id="divList">
                <ul id="treelist" class="easyui-tree"></ul>
            </div>                                        
        </div>
        <!--/right_box-->
        <div id="right_box" class="col-md-8">
            <div id="divEdit">
                @Html.Action("Create", "MailType", null)
            </div>
        </div>
    </div> 
</div>
    }
<!--Confirm box-->
@Html.Action("ConfirmPopup", "Common", null)
@Html.Action("jqueryval", "Common", null)
<style type="text/css">
    #left_box {
        float:left;
        overflow-x:hidden;
    }
     #right_box {
        float:left;
    }
</style>


<script type="text/javascript">
    (function ($) {
        $.createDataBuilder = function (p) {
            var DataMgr = {
                config: {
                    isPostBack: false,
                    async: true,
                    cache: false,
                    processData: false,
                    mimeType: "multipart/form-data",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: '{}',
                    dataType: 'json',
                    baseURL: p.BaseURL,
                    method: "",
                    url: "",
                    ajaxCallMode: 0,
                    isValid: false,
                    ContainerClientID: p.ContainerClientID
                },
                messages:
                {
                    nomenu: "No Data"
                },
                init: function (config) {
                    DataMgr.InitializeCotrols();
                    DataMgr.BindEvents();
                },
                ajaxSuccess: function (data) {
                    switch (parseInt(DataMgr.config.ajaxCallMode)) {
                        case 1:
                            DataMgr.BindDetails(data);
                            break;
                        case 2:
                            DataMgr.ReloadData(data);
                            break;
                        case 3:
                            DataMgr.ResetControls();
                            break;
                    }
                },
                ajaxFailure: function (jqXHR, textStatus, errorThrown) {
                    handleAjaxErrors(jqXHR, textStatus, errorThrown);
                },
                ajaxCall: function (config) {
                    $.ajax({
                        type: DataMgr.config.type,
                        contentType: DataMgr.config.contentType,
                        cache: DataMgr.config.cache,
                        url: DataMgr.config.url,
                        data: DataMgr.config.data,
                        dataType: DataMgr.config.dataType,
                        success: DataMgr.ajaxSuccess,
                        error: DataMgr.ajaxFailure,
                        async: false
                    });
                },
                InitializeCotrols: function () {
                    $("input:hidden[name=Mode]").val(0);
                   
                    DataMgr.RemoveQtip();
                    DataMgr.HandleAddEditMode();
                    DataMgr.PopulateTypeComboBoxTree();
                    DataMgr.PopulateTypeTreeList();
                },
                HandleAddEditMode: function () {
                    var mode = $("input:hidden[name=Mode]").val();
                    if (mode == 1) {
                        $("#btnAdd").hide();
                        $("#btnEdit").show();
                    }
                    else {
                        $("#btnAdd").show();
                        $("#btnEdit").hide();
                    }
                },
                RemoveQtip: function () {
                    $('span.error:first').qtip("hide");
                    $(".qtip").remove();
                },
                BindEvents: function () {
                    //Add and update post action
                    $(document).on("click", "#btnAdd", function () {
                        if (!$("#myform").valid()) { // Not Valid
                            return false;
                        } else {
                            DataMgr.RemoveQtip();
                            //Add new Item
                            var data = DataMgr.ConvertFormToJSON("myform");
                            DataMgr.AddData(data);
                        }
                    });

                    $(document).on("click", "#btnEdit", function () {
                        if (!$("#myform").not(":disabled").valid()) { // Not Valid
                            return false;
                        } else {
                            DataMgr.RemoveQtip();
                            // Update Item
                            var data = DataMgr.ConvertFormToJSON("myform");
                            DataMgr.UpdateData(data);
                        }
                    });

                    // Reset form
                    $(document).on("click", "#btnReset", function () {
                        DataMgr.ResetControls();
                    });

                    // Click edit (get)
                    //$(document).on("click", ".editItem", function () {
                    //    var ID = $(this).data('id');  // ID cua dong du lieu
                    //    DataMgr.GetDetails(ID);

                    //    //Go to top
                    //    $('html, body').animate({ scrollTop: 0 }, 'fast');
                    //    return false;
                   // });

                    // Click delete (get)
                    $(document).on("click", ".deleteItem", function (e) {
                        var ID = $(this).data('id');  // ID cua dong du lieu
                        $('#confirm')
                            .modal({ backdrop: 'static', keyboard: false })
                            .one('click', '[data-value]', function (e) {
                                if ($(this).data('value')) {
                                    $("input:hidden[name=Mode]").val(1);
                                    DataMgr.DeleteData(ID);
                                    return false;
                                }
                            });
                    });

                    // Click update Status (get)
                    $(document).on("click", ".updateStatusItem", function (e) {
                        var ID = $(this).data('id');  // ID cua dong du lieu
                        $("input:hidden[name=Mode]").val(1);
                        DataMgr.UpdateStatusData(ID);
                        return false;
                    });

                },
                ConvertFormToJSON: function (form) {
                    var array = $("#" + form).serializeArray();
                    var json = {};
                    $.each(array, function () {
                        json[this.name] = this.value || '';
                    });
                    return JSON.stringify(json);
                },
                PopulateTypeTreeList: function () {
                    var treeBox = $('#treelist');
                    treeBox.tree({
                        url: '/Admin/MailType/PopulateHierachyTypeList',
                        animate: true,
                        dnd: true,
                        editable: false,
                        formatter: function (node) {
                            return node.id;
                        },
                        onClick: function (node) {
                            //$(this).tree('beginEdit', node.target);
                            DataMgr.GetDetails(node.id);
                            //alert(node.id);
                        },
                        onDrop: function (targetNode, source, point) {
                            //var targetId = $(target).tree('getNode', targetNode).id;
                            //$.ajax({
                            //    url: '...',
                            //    type: 'post',
                            //    dataType: 'json',
                            //    data: {
                            //        id: source.id,
                            //        targetId: targetId,
                            //        point: point
                            //    }
                            //});
                        }
                        //valueField: 'id',
                        //textField: 'text',
                        //required: true,
                    });


                    //var node = treeBox.tree('getSelected');
                    //if (node) {
                    //    treeBox.tree('update', {
                    //        target: node.target,
                    //        text: 'new text'
                    //    });
                    //}
                },
                PopulateTypeComboBoxTree: function () {
                    var selectBox = $('#cboParentId');
                    selectBox.combotree({
                        url: '/Admin/MailType/PopulateHierachyTypeList',
                        valueField: 'id',
                        textField: 'text',
                        required: true,
                        editable: false
                    });
                    var mode = $("input:hidden[name=Mode]").val();
                    if (mode == '0') {
                        selectBox.combotree('setValue', '0');
                        //selectBox.combotree('setText', 'Root');
                    } else {
                        var id = $('input:hidden[name=ParentId]').val();
                        selectBox.combotree('setValue', id);
                    }
                },               
                AddData: function (data) {
                    this.config.method = "Create";
                    this.config.data = data;
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                GetDetails: function (id) {
                    var data = { 'id': id };
                    this.config.method = "Details";
                    this.config.data = data;
                    this.config.type = "GET";
                    this.config.dataType = "html";
                    this.config.url = this.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 1;
                    this.ajaxCall(this.config);
                },
                BindDetails: function (data) {
                    $("input:hidden[name=Mode]").val(1);
                    $('#divEdit').html(data);
                    DataMgr.HandleAddEditMode();
                    DataMgr.PopulateTypeComboBoxTree();
                },
                UpdateData: function (data) {
                    this.config.method = "Edit";
                    this.config.type = "POST";
                    this.config.dataType = "json";
                    this.config.data = data;
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                UpdateStatusData: function (ID) {
                    this.config.method = "UpdateStatus";
                    this.config.type = "POST";
                    this.config.dataType = "json";
                    this.config.data = JSON.stringify({ "id": ID });
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                UpdateListOrder: function (id, listorder) {
                    $("input:hidden[name=Mode]").val(1);

                    this.config.method = "UpdateListOrder";
                    this.config.type = "POST";
                    this.config.dataType = "json";
                    this.config.data = JSON.stringify({ "id": id, "listorder": listorder });
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                DeleteData: function (ID) {
                    this.config.method = "Delete";
                    this.config.data = JSON.stringify({ "id": ID });
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                ReloadData: function (data) {
                    var titleSuccess = "", titleFailure = "", titleAjaxError = "";
                    titleAjaxError = "@Eagle.Resource.LanguageResource.Error";
                    var mode = $("input:hidden[name=Mode]").val();
                    if (mode == 0) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.CreateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.CreateFailure";
                    }
                    else if (mode == 1) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.UpdateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.UpdateFailure";
                    }
                    else if (mode == 2) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.DeleteSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.DeleteFailure";
                    }
                    else {
                        titleSuccess = "@Eagle.Resource.LanguageResource.UpdateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.UpdateFailure";
                    }

                    var result = JSON.parse(data);
                    if (result.flag == 'true') {
                        //Reload page after success
                        this.config.method = "Index";
                        $.ajax({
                            type: "GET",
                            url: DataMgr.config.baseURL + this.config.method,
                            success: function (data) {
                                //DataMgr.ResetControls();
                                $('#' + DataMgr.config.ContainerClientID).html(data);
                                DataMgr.InitializeCotrols();
                                showMessageWithTitle(titleSuccess, result.message, "success", 20000);
                            }, error: function (jqXHR, textStatus, errorThrown) {
                                handleAjaxErrors(jqXHR, textStatus, errorThrown);
                            }
                        });
                    } else {
                        showMessageWithTitle(titleFailure, result.message, "error");
                        hideMessageWithTitle(20000);
                    }
                },
                ResetControls: function () {
                    var mode = $("input:hidden[name=Mode]").val();
                    if (mode == 1) {
                        DataMgr.GetDetails($(".KeyId").val());
                        $("#btnAdd").hide();
                        $("#btnEdit").show();
                    }
                    else {
                        $("#btnAdd").show();
                        $("#btnEdit").hide();

                        //var validateObj = $('#myform');
                        //validateObj.find('input:text, input:password, input:file, select, textarea').val('');
                        //validateObj.find('input:radio, input:checkbox').removeAttr('checked').removeAttr('selected');
                        //validateObj.find('input[type="number"]').val(0);
                        //validateObj.find('select').find('option:first').attr('selected', true).siblings().attr('selected', false);
                    }
                }              
            };
            DataMgr.init();
        }

        var Controller = 'MailType';
        var BaseURL = areas + "/" + Controller + "/";
        var base_settings = {
            ContainerClientID: "MainBody",
            BaseURL: BaseURL
        };
        $.createDataBuilder(base_settings);
    })(jQuery);
</script>
