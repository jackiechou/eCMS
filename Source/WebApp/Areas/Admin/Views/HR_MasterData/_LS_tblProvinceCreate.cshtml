@model LS_tblProvinceViewModel

<form id="frmAdd" class="form-horizontal">
    @Html.HiddenFor(model => model.LSProvinceID)
    @Html.HiddenFor(model => model.strCountryName)
    <fieldset>
        <div id="alertMessageBox">
            @if (ViewBag.DisplayErrorMessage == true)
            {
                <div class="@ViewBag.CssClass">
                    <a href="#" class="close" data-dismiss="alert">&times;</a>
                    <strong>@ViewBag.SortMessage !</strong>
                    <div class="padding-left">
                        @Html.Raw(Server.HtmlDecode(ViewBag.Message))
                    </div>
                </div>
            }
        </div>
        <div class="input-area">
            <!-- start row -->
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.LSCountryID)
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.LSCountryID, new { @class = "input-compo253" })
                    @Html.ValidationMessageFor(model => model.LSCountryID)
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.LSProvinceCode)
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.LSProvinceCode, new { @class = "input-large" })
                    @Html.ValidationMessageFor(model => model.LSProvinceCode)
                </div>
            </div>
            <!-- end row -->
            <!-- start row -->
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Name)
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Name, new { @class = "input-large" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.VNName)
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.VNName, new { @class = "input-large" })
                    @Html.ValidationMessageFor(model => model.VNName)
                </div>
            </div>
            <!-- end row -->
            <!-- start row -->
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Rank)
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Rank, new { @class = "input-mini" })
                    @Html.ValidationMessageFor(model => model.Rank)
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Used)
                </div>
                <div class="col-md-4">
                    @Html.CheckBox("Used")
                </div>
            </div>
            <!-- end row -->
            <div class="row">
                <div class="col-md-2">
                    <label>@Eagle.Resource.LanguageResource.Note</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Note, new { @class = "input-xxlarge" })
                    @Html.ValidationMessageFor(model => model.Note)
                </div>

            </div> 
            <script>
                (function ($) {
                    ListForDropdown();
                    function ListForDropdown() {
                        //The url we will send our get request to
                        var requestUrl = '@Url.Action("DropdownList", "LS_tblCountry")';
                            var pageSize = 20;
                            var selectBox = $('#LSCountryID');
                            selectBox.select2({
                                placeholder: 'Input Code or Country name',
                                minimumInputLength: 0,
                                allowClear: true,
                                ajax: {
                                    url: requestUrl,
                                    dataType: 'json',
                                    quietMillis: 100,  //How long the user has to pause their typing before sending the next request
                                    data: function (term, page) {
                                        return {
                                            pageSize: pageSize,
                                            pageNum: page,
                                            searchTerm: term
                                        };
                                    },
                                    results: function (data, page) {
                                        //Used to determine whether or not there are more results available,
                                        //and if requests for more data should be sent in the infinite scrolling                    
                                        var more = (page * pageSize) < data.Total;
                                        return { results: data.Results, more: more };
                                    }
                                },
                                formatSelection: function (result) {
                                    return result.name;
                                },
                                formatResult: function (result) {
                                    return result.name;
                                },
                                initSelection: function (element, callback) {
                                    var selected_value = $('#LSCountryID').val();
                                    var data = { id: element.val(), name: element.val() };
                                    callback(data);
                                    $('input#LSCountryID').val(selected_value);
                                }
                            });
                        }
                        //******************************************************************
                        //Ending AutoComplete **********************************************
                        //****************************************************************** 

                    })(jQuery);

            </script>
        </div>
       <div class="row">
            <div class="footbar">
                <div>
                    <input type="button" id="btnReset" value=" @Eagle.Resource.LanguageResource.btnReset" class="direct_bt btn btn-larg1e row-fluid" />
                    <input type="button" id="btnAdd" value=" @Eagle.Resource.LanguageResource.btnSave" class="direct_bt btn btn-info btn-larg1e row-fluid AddModel" />
                </div>
            </div>
        </div>
    </fieldset>
</form>
@Html.Action("jqueryval", "Common", null)
