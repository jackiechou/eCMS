@{
    ViewBag.Title = Html.Raw(Eagle.Resource.LanguageResource.CAFR);
    Layout = Request.IsAjaxRequest() ? null : Eagle.Repository.UI.Layout.LayoutType.ReportLayout;
}
@model Eagle.Model.Report.HR.PersonnelStatisticModel

<div id="MainBody">      
    <form id = "myform" method="post" name = "myform"  enctype = "multipart/form-data" autocomplete = "off">
        <div class="form-horizontal detailViewContainer">
            <div class="row">
                <div id="alertMessageBox">
                    @if (ViewBag.DisplayErrorMessage == true)
                    {
                        <div class="@ViewBag.CssClass">
                            <a href="#" class="close" data-dismiss="alert">&times;</a>
                            <strong>@ViewBag.SortMessage !</strong>
                            <div class="padding-left">
                                @Html.Raw(Server.HtmlDecode(ViewBag.Message))
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="row">
                <div class="row">
                    <div class="col-md-2">
                        <label>
                            @Html.Raw(Eagle.Resource.LanguageResource.CompanyUnit)
                        </label>
                    </div>
                    <div class="col-md-4">
                        <input id="LSCompanyID" name="LSCompanyID" type="text" value="0" class="easyui-combotree span2" />
                    </div>
                    <div class="col-md-2">
                         <label>@Html.Raw(Eagle.Resource.LanguageResource.StatisticDate)</label>
                    </div>
                    <div class="col-md-4">                     
                         @Html.DateTimePicker("StatisticDate", null, DateTime.Now.ToString("dd/MM/yyyy"), false, new { @readonly = "readonly" })
                    </div>
                </div>
             
                <div class="row">
                    <div class="col-md-12">                
                      
                            <ul class="nav nav-tabs" id="myTabs">
                                <li id="tab-1" class="active"><a href="#pane-1" data-toggle="tab">@Eagle.Resource.LanguageResource.GeneralInfo</a></li>
                                <li id="tab-2"><a href="#pane-2" data-toggle="tab">@Eagle.Resource.LanguageResource.Details</a></li>                    
                            </ul>

                            <div id="myTabContents" class="tab-content responsive">
                                @*----------------------General--------------------------*@
                                <div class="tab-pane fade in active" id="pane-1">
                                    <div class="ReportArea">
                                         @Html.DevExpress().ReportToolbar(settings =>
                                       {
                                           // The following settings are necessary for a Report Toolbar.
                                           settings.Name = "ReportToolbar";
                                           settings.ReportViewerName = "reportViewer1";
                                       }).GetHtml()
                                        <div id="ReportContainer" class="report_container">
                                            @Html.Action("LoadReportViewer", "CAFR", new { area = "Admin", @LSCompanyID = ViewData["LSCompanyID"] }) 
                                        </div>
                                    </div>
                                </div>
                                @*----------------------Details--------------------------*@
                                <div class="tab-pane fade" id="pane-2">
                                    <div class="DetailReportArea">
                                          @Html.DevExpress().ReportToolbar(settings =>
                                           {                                              
                                               settings.Name = "ReportToolbarQuater";
                                               settings.ReportViewerName = "reportViewerQuater";
                                           }).GetHtml()

                                         <div id="DetailReportContainer" class="report_container">     
                                             @Html.Action("LoadReportViewer_CAFRByQuarter", "CAFR", new { area = "Admin",@Year = DateTime.Now.Year, @LSCompanyID  = ViewData["LSCompanyID"] })
                                        </div>
                                    </div>
                                 </div>   
                             </div>                       
                       
                    </div>
                     <div class="clearboth"></div>
                </div>               
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    (function ($) {
        $.createDataBuilder = function (p) {
            var DataMgr = {
                config: {
                    isPostBack: false,
                    async: true,
                    cache: false,
                    processData: false,
                    mimeType: "multipart/form-data",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: '{}',
                    dataType: 'json',
                    baseURL: p.BaseURL,
                    method: "",
                    url: "",
                    ajaxCallMode: 0,
                    isValid: false,
                    ContainerClientID: p.ContainerClientID
                },
                messages:
                {
                    nomenu: "No Data"
                },
                init: function (config) {
                    ShowDateTimePicker();
                    DataMgr.InitializeCotrols();
                    DataMgr.BindEvents();
                },
                ajaxSuccess: function (data) {
                    switch (parseInt(DataMgr.config.ajaxCallMode)) {
                        case 1:
                            DataMgr.BindDataToReportContainer(data);
                            break;
                        case 2:
                            DataMgr.BindDataToDetailReportContainer(data);
                            break;
                        case 3:
                            DataMgr.ReloadData();
                            break;
                        default:
                            break;
                    }
                },
                ajaxFailure: function (jqXHR, textStatus, errorThrown) {
                    handleAjaxErrors(jqXHR, textStatus, errorThrown);
                },
                ajaxCall: function (config) {
                    $.ajax({
                        type: DataMgr.config.type,
                        contentType: DataMgr.config.contentType,
                        cache: DataMgr.config.cache,
                        url: DataMgr.config.url,
                        data: DataMgr.config.data,
                        dataType: DataMgr.config.dataType,
                        success: DataMgr.ajaxSuccess,
                        error: DataMgr.ajaxFailure,
                        async: false
                    });
                },               
                InitializeCotrols: function () {
                    //$.validator.methods["date"] = function (value, element) { return true; }  
                    //DataMgr.RemoveQtip();                   
                    
                    $('#changeSidebarPos').trigger('click');                                        
                    DataMgr.LoadComboTree('LSCompanyID', '@Url.Action("GetHierachicalList", "LS_tblCompany")', true);   
                },               
                BindEvents: function () {
                    DataMgr.HandleTabEvent();    
                },
                RemoveQtip: function () {
                    $('span.error:first').qtip("hide");
                    $(".qtip").remove();
                },
                HandleTabEvent: function () {
                    $('.nav-tabs a').click(function (e) {
                        var tab_pane_id = $(this).attr("href");
                        $(tab_pane_id).addClass("in").siblings().remove("in");
                        $(this).tab('show');
                    });
                },  
                LoadComboTree: function (selectId, actionUrl, isRequired) {
                    var selectBox = $('#' + selectId);

                    var hiddenBox = $('input[type=hidden][name="' + selectId + '"]');
                    var selectedValue = selectBox.val();

                    if (isRequired == undefined || isRequired == null)
                        isRequired = false;

                    selectBox.combotree({
                        url: actionUrl,
                        textField: 'text',
                        valueField: 'id',
                        required: isRequired,
                        editable: false,
                        onLoadSuccess: function (row, data) {
                            $(this).tree("collapseAll");
                        },
                        onClick: function (node) {
                            selectedValue = node.id;
                            $(this).val(selectedValue);
                            hiddenBox.val(selectedValue);

                            //Load REPORT
                            DataMgr.LoadReportViewer();
                           // DataMgr.LoadDetailReportViewer();
                        }
                    });
                    selectBox.combotree('setValue', selectedValue);
                },
                AddTooltip: function (elementId, message) {
                    if (elementId != undefined && elementId != null) {
                        var qtipId = 'qtip-' + elementId;
                        var element = $('input[type=hidden][name="' + elementId + '"]');

                        if (element.hasClass('input-validation-error'))
                            element.addClass('input-validation-error');
                        element.attr({ 'data-hasqtip': elementId, 'aria-describedby': qtipId });

                        var valSpan = element.parents().siblings('span[data-valmsg-for="' + elementId + '"]');
                        valSpan.addClass('field-validation-error').removeClass('field-validation-valid');

                        var divContent = $('<div/>', {
                            id: qtipId + '-content',
                            // 'class': 'qtip qtip-default ui-tooltip-red qtip-pos-rc qtip-focus',
                            'class': 'ui-tooltip-red qtip-pos-rc qtip-focus',
                            attr: { 'aria-atomic': "true" },
                            html: '<span id="' + qtipId + '-content-span" for="' + elementId + '"></span>'
                        });

                        var divWrapper = $('<div/>', {
                            id: qtipId,
                            'class': 'qtip-default ui-tooltip-red qtip-pos-rc qtip-focus',
                            attr: {
                                style: "z-index: 15003; display: block; top: 375px; left: 737.467px;",
                                tracking: "false", role: "alert", "aria-live": "polite", "aria-atomic": "false",
                                "aria-describedby": "qtip-1-content", "aria-hidden": "false", "data-qtip-id": "1",
                            }
                        });

                        if (valSpan.siblings('#' + qtipId).length == 0) {
                            divWrapper.append(divContent);
                            divWrapper.insertAfter(valSpan);
                        }
                        showMessageWithTitle('warning', message, "warning", 3000);
                        $('#' + qtipId + '-content-span').html(message);
                        element.show();
                    }
                },
                RemoveTooltip: function (elementId) {
                    var qtipId = $('#qtip-' + elementId);
                    qtipId.remove();
                },
                ConvertFormToJSON: function (form) {
                    var array = $("#" + form).serializeArray();
                    var json = {};
                    $.each(array, function () {
                        json[this.name] = this.value || '';
                    });
                    return JSON.stringify(json);
                },
                LoadReportViewer: function () {                   
                    //var LSCompanyID = $('input[type=hidden][name="LSCompanyID"]').val();
                    var LSCompanyID = $("#LSCompanyID").val();
                    var data = { "LSCompanyID": LSCompanyID };
                    this.config.method = "LoadReportViewer";
                    this.config.data = data;
                    this.config.type = "GET";
                    this.config.dataType = "html";
                    this.config.url = this.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 1;
                    this.ajaxCall(this.config);
                },                
                BindDataToReportContainer: function (data) {
                    $('#ReportContainer').html(data);         
                },
                LoadDetailReportViewer: function () {                   
                    var LSCompanyID = $("#LSCompanyID").val();
                    var data = { "LSCompanyID": LSCompanyID };
                    this.config.method = "LoadDetailReportViewer";
                    this.config.data = data;
                    this.config.type = "GET";
                    this.config.dataType = "html";
                    this.config.url = this.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                BindDataToDetailReportContainer: function (data) {                   
                    $('#DetailReportContainer').html(data);
                },     
                ReloadData: function (data) {
                    var titleSuccess = "", titleFailure = "", titleAjaxError = "";
                    titleAjaxError = "@Eagle.Resource.LanguageResource.Error";
                    titleSuccess = "@Eagle.Resource.LanguageResource.UpdateSuccess";
                    titleFailure = "@Eagle.Resource.LanguageResource.UpdateFailure";

                    var result = JSON.parse(data);
                    if (result.flag == 'true') {
                        showMessageWithTitle(titleSuccess, result.message, "success", 20000);
                        //Reload page after success
                        this.config.method = "Index";
                        $.ajax({
                            type: "GET",
                            url: DataMgr.config.baseURL + this.config.method,
                            success: function (data) {
                                $('#MainBody').html(data);
                                showMessageWithTitle(titleSuccess, result.message, "success", 3000);
                            }, error: function (jqXHR, textStatus, errorThrown) {
                                handleAjaxErrors(jqXHR, textStatus, errorThrown);
                            }
                        });
                    } else {
                        showMessageWithTitle(titleFailure, result.message, "error", 20000);
                    }
                },
                ResetControls: function () {
                    var validateObj = $('#myform');
                    validateObj.find('input:text, input:password, input:file, select, textarea').not('.ignored').val('');
                    validateObj.find('input:radio, input:checkbox').removeAttr('checked').removeAttr('selected');
                    validateObj.find('input[type="number"]').val(0);
                    validateObj.find('select').find('option:first').attr('selected', true).siblings().attr('selected', false);
                    DataMgr.InitializeCotrols();
                }
            };
            DataMgr.init();
        }

        var Controller = 'CAFR';
        var BaseURL = areas + "/" + Controller + "/";
        var base_settings = {
            ContainerClientID: "divEdit",
            BaseURL: BaseURL
        };
        $.createDataBuilder(base_settings);
    })(jQuery);
</script>

