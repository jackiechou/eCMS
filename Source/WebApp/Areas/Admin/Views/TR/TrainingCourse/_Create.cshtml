@model TrainingCourseViewModel

<form id="frmAdd" class="form-horizontal"> 
    @Html.HiddenFor(model => model.LSTrainingCourseID)
    @Html.HiddenFor(model => model.InitialTrainingCourse)
    
     <div id="alertMessageBox">
        @if (ViewBag.DisplayErrorMessage == true)
        {
            <div class="@ViewBag.CssClass">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>@ViewBag.SortMessage !</strong>
                <div class="padding-left">
                    @Html.Raw(Server.HtmlDecode(ViewBag.Message))
                </div>
            </div>
        }
    </div>
    <div class="box">
        <div class="row">            
            <div id="right_accordion" class="accordion-group">
                 <div class="accordion-heading toolbar">
                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#form_accordion">
                        <span class="pull-right"><i class="icon-chevron-up icon-white"></i></span>
                        <span class="heading-tite">@Eagle.Resource.LanguageResource.InputArea</span>
                    </a>
                </div>
                <div id="form_accordion" class="accordion-body collapse in">
                     <div class="accordion-inner">
                            <div class="accordion-content">                 
                            <div class="row">
                                <div class="col-md-2">
                                        @Html.RequiredLabelFor(model => model.LSTrainingCourseCode)
                                </div>
                                <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.LSTrainingCourseCode, new { @autocomplete="off" })
                                        @Html.ValidationMessageFor(model => model.LSTrainingCourseCode)                                 
                                </div>
                                <div class="col-md-2">
                                        @Html.RequiredLabelFor(model => model.Name)
                                </div>
                                <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.Name)
                                        @Html.ValidationMessageFor(model => model.Name)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                        @Html.RequiredLabelFor(model => model.LSTrainingCodeID)
                                </div>
                                <div class="col-md-4">
                                        @Html.TextBox("SelectLSTrainingCodeID", null, new { @class = "input-compo253"})                                        
                                        @Html.HiddenFor(model => model.LSTrainingCodeIDAllowNull)                                                                                                                       
                                        @Html.HiddenFor(model => model.TrainingCodeName)      
                                </div>
                                <div class="col-md-2">
                                        @Html.RequiredLabelFor(model => model.LSTrainingCategoryID)
                                </div>
                                <div class="col-md-4">
                                        @Html.TextBox("SelectLSTrainingCategoryID", null, new { @class = "input-compo253"})                                                                             
                                        @Html.HiddenFor(model => model.LSTrainingCategoryIDAllowNull)  
                                        @Html.HiddenFor(model => model.TrainingCategoryName)                                                                                      
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                        @Html.LabelFor(model => model.LSTrainingProviderID)
                                </div>
                                <div class="col-md-4">
                                        @Html.TextBox("SelectLSTrainingProviderID", null, new { @class = "input-compo253"})                                        
                                        @Html.HiddenFor(model => model.LSTrainingProviderID)   
                                        @Html.HiddenFor(model => model.TrainingProviderName)                                             
                                </div>                                
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                        @Html.LabelFor(model => model.LearningObjectives)
                                </div>
                                <div class="col-md-3">
                                         @Html.TextAreaFor(model => model.LearningObjectives, new { @class = "input-xxlarge" })                                        
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                        @Html.LabelFor(model => model.Used)                                      
                                </div>
                                <div class="col-md-4">
                                        @Html.CheckBox("Used")
                                </div>
                                   <div class="col-md-2">
                                        @Html.LabelFor(model => model.Rank)
                                </div>
                                <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.Rank, new { @autocomplete="off" })
                                        @Html.ValidationMessageFor(model => model.Rank)                                 
                                </div>      
                             </div>                          
                            <div class="row">
                                <div class="col-md-2">
                                        @Html.LabelFor(model => model.Note)
                                </div>
                                <div class="col-md-4">
                                         @Html.TextBoxFor(model => model.Note, new { @class = "input-xxlarge" })                                      
                                </div>
                            </div>
                      
                            <!--/row-->
                            <div class="row">
                                <div class="footbar">
                                    <input type="button" id="btnReset" value="@Eagle.Resource.LanguageResource.btnReset" class="btn" />
                                    <input type="button" id="btnAdd" value="@Eagle.Resource.LanguageResource.btnSave" class="btn btn-info AddModel" />
                                </div>
                            </div>
                            <!--End.row-->
                        </div>
                     </div>
                </div>
            </div>
        </div>
    </div>
</form>
@Html.Action("jqueryval", "Common", null)

<script>
    var strInputTrainingCodeName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingCodeName)';
    var strInputTrainingCategoryName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingCategoryName)';
    var strInputTrainingProviderName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingProviderName)';

    PopulateDropDownListAutoComplete("SelectLSTrainingCodeID", "LSTrainingCodeIDAllowNull", "TrainingCodeName", strInputTrainingCodeName, areas + '/TrainingCode/DropdownList');
    PopulateDropDownListAutoComplete("SelectLSTrainingCategoryID", "LSTrainingCategoryIDAllowNull", "TrainingCategoryName", strInputTrainingCategoryName, areas + '/TrainingCategory/DropdownList');
    PopulateDropDownListAutoComplete("SelectLSTrainingProviderID", "LSTrainingProviderID", "TrainingProviderName", strInputTrainingProviderName, areas + '/TrainingProvider/DropdownList');
</script>

