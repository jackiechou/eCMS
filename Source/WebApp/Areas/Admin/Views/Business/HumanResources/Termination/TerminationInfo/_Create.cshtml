@{
    ViewBag.Title = Html.Raw(Eagle.Resource.LanguageResource.EditTermination);  
    Layout = Eagle.Repository.UI.Layout.LayoutType.MainLayout;
}
@model Eagle.Model.TER.TerminationViewModel

@section ContentSection
{
    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "myform", name = "myform", autocomplete = "off", @class = "form-horizontal" }))
    {
        @*Click Button to pick data from grid in popup*@       
        if(Model.EmpID==null || Model.EmpID==0)
        {
            @Html.Action("GetTerminationInfoOfEmployee", "TerminationInfo")        
        }
        else
        {
            @Html.Action("GetTerminationInfoOfEmployee", "TerminationInfo", new { EmpID = Model.EmpID })  
        }    
    
        @Html.Action("ConfirmationPopup", "TerminationInfo", null)
        <div id="divContainer">    
             @Html.Partial("../Business/HumanResources/Termination/TerminationInfo/_Edit")
        </div>
    }
}

<script type="text/javascript">
    (function ($) {
        $.createDataBuilder = function (p) {
            var DataMgr = {
                config: {
                    isPostBack: false,
                    async: true,
                    cache: false,
                    processData: false,
                    mimeType: "multipart/form-data",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: '{}',
                    dataType: 'json',
                    baseURL: p.BaseURL,
                    method: "",
                    url: "",
                    ajaxCallMode: 0,
                    isValid: false,
                    mode: 0,
                    key: 0,
                    ContainerClientID: p.ContainerClientID
                },
                messages:
                {
                    nomenu: "No Data"
                },
                init: function (config) {
                    DataMgr.InitializeCotrols();
                    DataMgr.BindEvents();
                },
                ajaxSuccess: function (data) {
                    switch (parseInt(DataMgr.config.ajaxCallMode)) {
                        case 1:
                            DataMgr.ShowMessageBox(data);
                            break;
                        case 2:
                            DataMgr.ResetForm();
                            break;
                        case 3:
                            DataMgr.ReloadData(data);
                    }
                },
                ajaxFailure: function (jqXHR, textStatus, errorThrown) {
                    handleAjaxErrors(jqXHR, textStatus, errorThrown);
                },
                ajaxCall: function (config) {
                    $.ajax({
                        type: DataMgr.config.type,
                        contentType: DataMgr.config.contentType,
                        cache: DataMgr.config.cache,
                        url: DataMgr.config.url,
                        data: DataMgr.config.data,
                        dataType: DataMgr.config.dataType,
                        success: DataMgr.ajaxSuccess,
                        error: DataMgr.ajaxFailure,
                        async: false
                    });
                },
                InitializeCotrols: function () {
                    var TerminationID = $("input[type=hidden][name=TerminationID]").val();
                    if (TerminationID != null && TerminationID != 0) {
                        $("#mode").val(1);
                        $("#btnAdd").hide();
                        $("#btnEdit").show();
                    }
                    else {
                        $("#mode").val(0);
                        $("#btnAdd").show();
                        $("#btnEdit").hide();
                    }

                    showUITooltip();
                    ShowDateTimePicker();
                    $.validator.methods["date"] = function (value, element) { return true; }
                    GetLeftBriefEmployeeInfo(@Model.EmpID);
                },
                BindEvents: function () {
                    //Add and update post action
                    $(document).on("click", "#btnAdd", function () {                                       
                        DataMgr.AddData();
                    });

                    // Reset form
                    $(document).on("click", "#btnReset", function () {
                        DataMgr.ResetForm();
                    });


                    // Update Item         
                    $(document).on("click", "#btnEdit", function () {
                        if (!$("#myform").not(":disabled").valid()) { // Not Valid
                            return false;
                        } else {             
                            DataMgr.UpdateData();                            
                        }
                    });
                },
                ConvertFormToJSON: function (form) {
                    var array = $("#" + form).serializeArray();
                    var json = {};
                    $.each(array, function () {
                        json[this.name] = this.value || '';
                    });
                    return JSON.stringify(json);
                },
                GetLeftBriefEmployeeInfo: function (id) {
                        $.ajax({                
                            url: areas + "/Common/EmployeeDisplay?EmpID=" + id,
                            encoding: "UTF-8",
                        dataType: "html",
                        contentType: "text/plain; charset=UTF-8",
                        success: function (data, statusCode, xhr) {
                            $('#LeftPane #avatar-display').html(data);
                        }, error: function (jqXHR, textStatus, errorThrown) {
                            handleAjaxErrors(jqXHR, textStatus, errorThrown);
                        }
                    });
                },
                AddTooltip: function (elementId, message) {
                    if (elementId != undefined && elementId != null) {
                        var qtipId = 'qtip-' + elementId;
                        var element = $('input[type=hidden][name="' + elementId + '"]');

                        if (element.hasClass('input-validation-error'))
                            element.addClass('input-validation-error');
                        element.attr({ 'data-hasqtip': elementId, 'aria-describedby': qtipId });

                        var valSpan = element.parents().siblings('span[data-valmsg-for="' + elementId + '"]');
                        valSpan.addClass('field-validation-error').removeClass('field-validation-valid');

                        var divContent = $('<div/>', {
                            id: qtipId + '-content',
                            // 'class': 'qtip qtip-default ui-tooltip-red qtip-pos-rc qtip-focus',
                            'class': 'ui-tooltip-red qtip-pos-rc qtip-focus',
                            attr: { 'aria-atomic': "true" },
                            html: '<span id="' + qtipId + '-content-span" for="' + elementId + '"></span>'
                        });

                        var divWrapper = $('<div/>', {
                            id: qtipId,
                            'class': 'qtip-default ui-tooltip-red qtip-pos-rc qtip-focus',
                            attr: {
                                style: "z-index: 15003; display: block; top: 375px; left: 737.467px;",
                                tracking: "false", role: "alert", "aria-live": "polite", "aria-atomic": "false",
                                "aria-describedby": "qtip-1-content", "aria-hidden": "false", "data-qtip-id": "1",
                            }
                        });

                        if (valSpan.siblings('#' + qtipId).length == 0) {
                            divWrapper.append(divContent);
                            divWrapper.insertAfter(valSpan);
                        }


                        showMessageWithTitle('warning', message, "warning", 3000);
                        $('#' + qtipId + '-content-span').html(message);
                        element.show();
                    }
                },
                RemoveTooltip: function (elementId) {
                    var qtipId = $('#qtip-' + elementId);
                    qtipId.remove();
                },
                AddData: function () {
                    if (!$("#myform").not(':hidden').valid()) { // Not Valid                            
                        return false;
                    } else {
                        DataMgr.config.mode = 1;
                        var data = DataMgr.ConvertFormToJSON("myform");                      
                        this.config.method = "Create";
                        this.config.data = data;
                        this.config.url = DataMgr.config.baseURL + this.config.method;
                        this.config.ajaxCallMode = 1;
                        this.ajaxCall(this.config);
                    }
                },
                UpdateData: function (data) {
                    if (!$("#myform").not(":disabled").valid()) { // Not Valid
                        return false;
                    } else {
                        var data = DataMgr.ConvertFormToJSON("myform");
                        this.config.method = "Edit";
                        this.config.type = "POST";
                        this.config.dataType = "json";
                        this.config.data = data;
                        this.config.url = DataMgr.config.baseURL + this.config.method;
                        this.config.ajaxCallMode = 3;
                        this.ajaxCall(this.config);
                    }
                },
                ShowMessageBox: function (data) {
                    var titleSuccess = "", titleFailure = "", titleAjaxError = "";
                    titleSuccess = "@Eagle.Resource.LanguageResource.CreateSuccess";
                    titleFailure = "@Eagle.Resource.LanguageResource.CreateFailure";

                    var result = JSON.parse(data);
                    if (result.flag == 'true') {
                        //Reload page after success
                        this.config.method = "Create";
                        $.ajax({
                            type: "GET",
                            url: DataMgr.config.baseURL + this.config.method,
                            success: function (data) {
                                showMessageWithTitle(titleSuccess, result.message, "success", 20000);
                                //DataMgr.InvokeConfirmationPopup();
                            }, error: function (jqXHR, textStatus, errorThrown) {
                                handleAjaxErrors(jqXHR, textStatus, errorThrown);
                            }
                        });
                    } else {
                        showMessageWithTitle(titleFailure, result.message, "error");
                        hideMessageWithTitle(20000);
                    }
                },
                ReloadData: function (data) {
                    var mode = DataMgr.config.mode;

                    var titleSuccess = "", titleFailure = "", titleAjaxError = "";
                    titleAjaxError = "@Eagle.Resource.LanguageResource.Error";
                    if (mode == 1) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.CreateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.CreateFailure";
                    }
                    else if (mode == 2) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.UpdateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.UpdateFailure";
                    }
                    else if (mode == 3) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.DeleteSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.DeleteFailure";
                    }
                    else {
                        titleSuccess = "@Eagle.Resource.LanguageResource.UpdateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.UpdateFailure";
                    }

                   var result = JSON.parse(data);
                   if (result.flag == 'true') {
                       showMessageWithTitle(titleSuccess, result.message, "success", 20000);
                   } else {
                       showMessageWithTitle(titleFailure, result.message, "error", 20000);
                   }
               },
                InvokeConfirmationPopup: function () {
                    bootbox.confirm("@Html.Raw(Eagle.Resource.LanguageResource.DoYouWantToContinue)", function (result) {
                        if (result) {
                            DataMgr.ResetForm();
                            return false;
                        } else {
                            var params = {};
                            window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (str, key, value) {
                                params[key] = value;
                            });
                            //var data = {
                            //    "LSCompanyID": '',
                            //    "InformedDate": '',
                            //    "EffectiveDate": '',
                            //    "ModuleId": params["ModuleID"]
                            //};
                            //DataMgr.ReloadData(data);
                            location.href = DataMgr.config.baseURL + "Index?ModuleID=" + params["ModuleID"];

                        }
                    });                  
                },
               @* ReloadData: function (data) {
                    var titleSuccess = "", titleFailure = "", titleAjaxError = "";
                    titleAjaxError = "@Eagle.Resource.LanguageResource.Error";
                    titleSuccess = "@Eagle.Resource.LanguageResource.CreateSuccess";
                    titleFailure = "@Eagle.Resource.LanguageResource.CreateFailure";

                    var result = JSON.parse(data);
                    if (result.flag == 'true') {
                        //Reload page after success
                        this.config.method = "Index";
                        $.ajax({
                            type: "GET",
                            url: DataMgr.config.baseURL + this.config.method,
                            success: function (data) {
                                // $('#' + DataMgr.config.ContainerClientID).html(data);
                                ShowDateTimePicker();
                                DataMgr.HandleQtip();
                                DataMgr.ResetForm();

                                showMessageWithTitle(titleSuccess, result.message, "success", 20000);
                            }, error: function (xhr, tst, err) {
                                 showMessageWithTitle("Uncaught Ajax Error (" + xhr.status + ") \n", xhr.responseText, "error", 50000);
                            }
                        });
                    } else {
                        showMessageWithTitle(titleFailure, result.message, "error");
                        hideMessageWithTitle(20000);
                    }
                },*@
                ResetForm: function () {
                    var url = '';
                    var TerminationID = $("input[type=hidden][name=TerminationID]").val();                   
                    if (TerminationID != null && TerminationID != '' && TerminationID != 0)
                        url = areas + "/TerminationInfo/Details?id=" + TerminationID;
                    else
                        url = areas + "/TerminationInfo/LoadCreateForm";

                    $.ajax({
                        type: 'GET',
                        url: url,
                        encoding: "UTF-8",
                        dataType: "html",
                        contentType: "text/plain; charset=UTF-8",
                        success: function (data, statusCode, xhr) {
                            $('#divContainer').html(data);
                            var TerminationID = $("input[type=hidden][name=TerminationID]").val();
                            if (TerminationID != null && TerminationID != 0) {
                                $("#btnAdd").hide();
                                $("#btnEdit").show();
                            }
                            else {
                                $("#btnAdd").show();
                                $("#btnEdit").hide();
                            }
                        }, error: function (jqXHR, textStatus, errorThrown) {
                            handleAjaxErrors(jqXHR, textStatus, errorThrown);
                        }
                    });
                }
            };
            DataMgr.init();
        }

        var Controller = 'TerminationInfo';
        var BaseURL = areas + "/" + Controller + "/";
        var base_settings = {
            ContainerClientID: "MainBody",
            BaseURL: BaseURL
        };
        $.createDataBuilder(base_settings);
    })(jQuery);
</script>

