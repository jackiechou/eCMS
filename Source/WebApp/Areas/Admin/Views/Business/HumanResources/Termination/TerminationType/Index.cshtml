@{
    ViewBag.Title = Html.Raw(Eagle.Resource.LanguageResource.TerminationType);
}
@model List<LS_tblTerminationTypeViewModel>
@section ContentSection
{
<div id="MainBody" class="main_box">
    @Html.Partial("../Business/HumanResources/Termination/TerminationType/_Reset")
</div>
    }

<link href="~/Scripts/plugins/tablednd/tablednd_custom.css" rel="stylesheet" />
<script src="~/Scripts/plugins/tablednd/js/jquery.tablednd.js"></script>
<script type="text/javascript">
    (function ($) {
        $.createDataBuilder = function (p) {
            var DataMgr = {
                config: {
                    isPostBack: false,
                    async: true,
                    cache: false,
                    processData: false,
                    mimeType: "multipart/form-data",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: '{}',
                    dataType: 'json',
                    baseURL: p.BaseURL,
                    method: "",
                    url: "",
                    ajaxCallMode: 0,
                    isValid: false,
                    ContainerClientID: p.ContainerClientID,
                    mode: 0,
                    key:0
                },
                messages:
                {
                    nomenu: "No Data"
                },
                init: function (config) {
                    DataMgr.InitializeCotrols();
                    DataMgr.BindEvents();
                },
                ajaxSuccess: function (data) {
                    switch (parseInt(DataMgr.config.ajaxCallMode)) {
                        case 1:
                            DataMgr.BindDetails(data);
                            break;
                        case 2:
                            DataMgr.ReloadData(data);
                            break;
                        case 3:
                            DataMgr.ResetControls();
                            break;
                    }
                },
                ajaxFailure: function (jqXHR, textStatus, errorThrown) {
                    handleAjaxErrors(jqXHR, textStatus, errorThrown);
                },
                ajaxCall: function (config) {
                    $.ajax({
                        type: DataMgr.config.type,
                        contentType: DataMgr.config.contentType,
                        cache: DataMgr.config.cache,
                        url: DataMgr.config.url,
                        data: DataMgr.config.data,
                        dataType: DataMgr.config.dataType,
                        success: DataMgr.ajaxSuccess,
                        error: DataMgr.ajaxFailure,
                        async: false
                    });
                },
                InitializeCotrols: function () {
                    InvokeDataTables();
                    DataMgr.RemoveQtip();
                    DataMgr.HandleAddEditMode();
                    DataMgr.DragNDrop();
                    $("#modalEdit").draggable({ handle: ".modal-header" });
                },
                HandleAddEditMode: function () {
                    var mode = DataMgr.config.mode;
                    if (mode == 1) {
                        $("#btnAdd").hide();
                        $("#btnEdit").show();
                    }
                    else {
                        $("#btnAdd").show();
                        $("#btnEdit").hide();
                    }
                },
                RemoveQtip: function () {
                    $('span.error:first').qtip("hide");
                    $(".qtip").remove();
                },
                BindEvents: function () {
                    //Add and update post action
                    $(document).on("click", "#btnAdd", function () {
                        if (!$("#myform").valid()) { // Not Valid
                            return false;
                        } else {
                            DataMgr.RemoveQtip();
                            //Add new Item                           
                            DataMgr.AddData();
                        }
                    });

                    $(document).on("click", "#btnEdit", function () {
                        if (!$("#myform").not(":disabled").valid()) { // Not Valid
                            return false;
                        } else {
                            DataMgr.RemoveQtip();
                            // Update Item                            
                            DataMgr.UpdateData();
                        }
                    });

                    // Reset form
                    $(document).on("click", "#btnReset", function () {
                        DataMgr.ResetControls();
                    });

                    // Click edit (get)
                    $(document).on("click", ".editItem", function () {
                        var ID = $(this).data('id');  // ID cua dong du lieu
                        DataMgr.GetDetails(ID);
                        DataMgr.config.mode = 1;
                        DataMgr.config.key = ID;
                        $('#Code').attr('readonly', 'readonly').addClass("greyInput");
                        DataMgr.HandleAddEditMode();

                        //Go to top
                        $('html, body').animate({ scrollTop: 0 }, 'fast');
                        return false;
                    });

                    // Click delete (get)
                    $(document).on("click", ".deleteItem", function (e) {
                        var ID = $(this).data('id');  // ID cua dong du lieu
                        bootbox.confirm("@Html.Raw(Eagle.Resource.LanguageResource.DoYouWantToContinue)", function (result) {
                            if (result) {
                                DataMgr.config.mode = 2;
                                DataMgr.DeleteData(ID);
                                return false;
                            }
                        });
                    });

                    // Click update Status (get)
                    $(document).on("click", ".updateStatusItem", function (e) {
                        var ID = $(this).data('id');  // ID cua dong du lieu
                        DataMgr.config.mode = 1;
                        DataMgr.UpdateStatusData(ID);
                        return false;
                    });

                },
                ConvertFormToJSON: function (form) {
                    var array = $("#" + form).serializeArray();
                    var json = {};
                    $.each(array, function () {
                        json[this.name] = this.value || '';
                    });
                    return JSON.stringify(json);
                },
                GenerateCode: function () {
                    $.getJSON("/Admin/LS_tblTerminationType/GenerateCode",
                        function (data) {
                            $("#Code").val(data);
                        });
                },
                AddData: function () {
                    var data = DataMgr.ConvertFormToJSON("myform");
                    this.config.method = "Create";
                    this.config.data = data;
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                GetDetails: function (id) {
                    var data = { "id": id };
                    this.config.method = "Details";
                    this.config.data = data;
                    this.config.type = "GET";
                    this.config.dataType = "html";
                    this.config.url = this.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 1;
                    this.ajaxCall(this.config);
                },
                BindDetails: function (data) {
                    $('#divEdit').html(data);
                },
                UpdateData: function () {
                    var data = DataMgr.ConvertFormToJSON("myform");
                    this.config.method = "Edit";
                    this.config.type = "POST";
                    this.config.dataType = "json";
                    this.config.data = data;
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                UpdateStatusData: function (ID) {
                    this.config.method = "UpdateStatus";
                    this.config.type = "POST";
                    this.config.dataType = "json";
                    this.config.data = JSON.stringify({ "id": ID });
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                UpdateListOrder: function (id, listorder) {
                    $("input:hidden[name=Mode]").val(1);

                    this.config.method = "UpdateListOrder";
                    this.config.type = "POST";
                    this.config.dataType = "json";
                    this.config.data = JSON.stringify({ "id": id, "listorder": listorder});
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                DeleteData: function (ID) {
                    this.config.method = "Delete";
                    this.config.data = JSON.stringify({ "id": ID });
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                ReloadData: function (data) {
                    var titleSuccess = "", titleFailure = "", titleAjaxError = "";
                    titleAjaxError = "@Html.Raw(Eagle.Resource.LanguageResource.Error)";
                    var mode = DataMgr.config.mode;
                    if (mode == 0) {
                        titleSuccess = "@Html.Raw(Eagle.Resource.LanguageResource.CreateSuccess)";
                        titleFailure = "@Html.Raw(Eagle.Resource.LanguageResource.CreateFailure)";
                    }
                    else if (mode == 1) {
                        titleSuccess = "@Html.Raw(Eagle.Resource.LanguageResource.UpdateSuccess)";
                        titleFailure = "@Html.Raw(Eagle.Resource.LanguageResource.UpdateFailure)";
                    }
                    else if (mode == 2) {
                        titleSuccess = "@Html.Raw(Eagle.Resource.LanguageResource.DeleteSuccess)";
                        titleFailure = "@Html.Raw(Eagle.Resource.LanguageResource.DeleteFailure)";
                    }
                    else {
                        titleSuccess = "@Html.Raw(Eagle.Resource.LanguageResource.UpdateSuccess)";
                        titleFailure = "@Html.Raw(Eagle.Resource.LanguageResource.UpdateFailure)";
                    }

                    var result = JSON.parse(data);
                    if (result.flag == 'true') {
                        //Reload page after success
                        this.config.method = "Index";
                        $.ajax({
                            type: "GET",
                            url: DataMgr.config.baseURL + this.config.method,
                            statusCode: {
                                401: function () {
                                    window.location.reload();
                                },
                                403: function () {
                                    window.location.reload();
                                },
                                590: function () {
                                    window.location.reload();
                                }
                            },
                            success: function (data, statusCode, xhr) {
                                //DataMgr.ResetControls();
                                $('#' + DataMgr.config.ContainerClientID).html(data);
                               DataMgr.InitializeCotrols();
                                showMessageWithTitle(titleSuccess, result.message, "success");
                                hideMessageWithTitle(20000);
                            }, error: function (jqXHR, textStatus, errorThrown) {
                                handleAjaxErrors(jqXHR, textStatus, errorThrown);
                            }
                        });
                    } else {
                        showMessageWithTitle(titleFailure, result.message, "error");
                        hideMessageWithTitle(20000);
                    }
                },
                ResetControls: function () {
                    var mode = DataMgr.config.mode;
                    if (mode == 1) {
                        DataMgr.GetDetails($(".key").val());
                        $('#Code').attr('readonly', 'readonly').addClass("greyInput");
                        $("#btnAdd").hide();
                        $("#btnEdit").show();
                    }
                    else {
                        $("#btnAdd").show();
                        $("#btnEdit").hide();

                        DataMgr.GenerateCode();
                        $("#Name").val('');
                        $("#Note").val('');
                        //var validateObj = $('#myform');
                        //validateObj.find('input:text, input:password, input:file, select, textarea').val('');
                        //validateObj.find('input:radio, input:checkbox').removeAttr('checked').removeAttr('selected');
                        //validateObj.find('input[type="number"]').val(0);
                        //validateObj.find('select').find('option:first').attr('selected', true).siblings().attr('selected', false);
                    }
                },
                DragNDrop:function(){
                    // Initialise the second table specifying a dragClass and an onDrop function that will display an alert
                    $("#dataTable").tableDnD({
                        onDragClass: "myDragClass",
                        onDrop: function (table, row) {
                            var rows = table.tBodies[0].rows;
                            var debugStr = "Row dropped was " + row.id + ". New order: ";
                            for (var i = 0; i < rows.length; i++) {
                                DataMgr.UpdateListOrder(rows[i].id, i + 1);
                                debugStr += rows[i].id + " ";
                            }
                            $("#debugArea").html(debugStr);
                        },
                        onDragStart: function (table, row) {
                            $("#debugArea").html("Started dragging row " + row.id);
                        }
                    });

                    $("#dataTable tr").hover(function () {
                        $(this.cells[0]).addClass('showDragHandle');
                    }, function () {
                        $(this.cells[0]).removeClass('showDragHandle');
                    });

                    // Setup the "Up" links
                    $(".rowUp").click(function () {
                        var row = $(this).closest("tr");
                        var table = row.parents('table');

                        // Get the previous element in the DOM
                        var previous = row.prev();

                        // Check to see if it is a row
                        if (previous.is("tr")) {
                            // Move row above previous
                            row.detach();
                            previous.before(row);

                            // draw the user's attention to it
                            row.fadeOut();
                            row.fadeIn();
                        }
                        // else - already at the top
                        GetSortableOrderingTable(table.attr("id"), row.attr("id"));

                    });

                    // Setup the "Up" links
                    $(".rowDown").click(function () {
                        var row = $(this).closest("tr");
                        var table = row.parents('table');

                        // Get the previous element in the DOM
                        var next = row.next();

                        // Check to see if it is a row
                        if (next.is("tr")) {
                            // Move row above previous
                            row.detach();
                            next.after(row);

                            // draw the user's attention to it
                            row.fadeOut();
                            row.fadeIn();
                        }
                        // else - already at the bottom

                        DataMgr.GetSortableOrderingTable(table.attr("id"), row.attr("id"));
                    });
                },
                GetSortableOrderingTable: function (selected_table, selected_row) {
                    var table = $('#' + selected_table)[0];
                    var row = $('#' + selected_row)[0];
                    var rows = table.tBodies[0].rows;

                    var debugStr = "Row dropped was " + row.id + ". New order: ";

                    for (var i = 0; i < rows.length; i++) {
                        DataMgr.UpdateListOrder(rows[i].id, i + 1);
                        debugStr += rows[i].id + " ";
                    }
                    $("#debugArea").html(debugStr);
                }
            };
            DataMgr.init();
        }

        var Controller = 'LS_tblTerminationType';
        var BaseURL = areas + "/" + Controller + "/";
        var base_settings = {
            ContainerClientID: "MainBody",
            BaseURL: BaseURL
        };
        $.createDataBuilder(base_settings);
    })(jQuery);
</script>