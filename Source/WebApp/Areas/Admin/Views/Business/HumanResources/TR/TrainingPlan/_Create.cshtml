@model TrainingPlanViewModel


<form id="frmAdd" class="form-horizontal"> 
    @Html.HiddenFor(model => model.TrainingPlanID)   
    @Html.HiddenFor(model => model.ListOfTrainingExpense)           
    @Html.HiddenFor(model => model.LevelApprove)
    @Html.HiddenFor(model => model.CurrentComment)    
    @Html.HiddenFor(model => model.EmpIDCreate)   
    
    @if (ViewBag.IsStart != null)
    {
        @Html.Hidden("IsStart",(int)ViewBag.IsStart)  
        @Html.Hidden("ReturnLevelApprove",0)  
        @Html.Action("_popupUnapprove", new { @LevelApprove = Model.LevelApprove })
    }     

    <div id="alertMessageBox">
        @if (ViewBag.DisplayErrorMessage == true)
        {
            <div class="@ViewBag.CssClass">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>@ViewBag.SortMessage !</strong>
                <div class="padding-left">
                    @Html.Raw(Server.HtmlDecode(ViewBag.Message))
                </div>
            </div>
        }
    </div>

    <div class="box">
        <div class="row">            
            <div id="right_accordion" class="accordion-group">
                 <div class="accordion-heading toolbar">
                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#form_accordion">
                        <span class="pull-right"><i class="glyphicon glyphicon-chevron-up icon-white"></i></span>
                        <span class="heading-tite">@Eagle.Resource.LanguageResource.InputArea</span>
                    </a>
                </div>
                <div id="form_accordion" class="accordion-body collapse in">
                     <div class="accordion-inner">
                            <div class="accordion-content">     
                            <h6>@Eagle.Resource.LanguageResource.TrainingPlan</h6>
                            <hr />
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.RequiredLabelFor(model => model.LSTrainingCodeID)
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBox("SelectLSTrainingCodeID", null, new { @class = "form-control" })                                        
                                    @Html.HiddenFor(model => model.LSTrainingCodeIDAllowNull)                                                         
                                    @Html.HiddenFor(model => model.TrainingCodeName)                                                                                                                             
                                </div>
                                <div class="col-md-2">
                                    @Html.RequiredLabelFor(model => model.LSTrainingCourseID)
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBox("SelectLSTrainingCourseID", null, new { @class = "form-control" })                                        
                                    @Html.HiddenFor(model => model.LSTrainingCourseIDAllowNull)   
                                    @Html.HiddenFor(model => model.TrainingCourseName)                                                                                                                    
                                </div>                                
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                        @Html.LabelFor(model => model.LearningObjective)
                                </div>
                                <div class="col-md-10">
                                         @Html.TextAreaFor(model => model.LearningObjective, new { @class = "form-control" })                                        
                                </div>
                            </div>                                       
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.RequiredLabelFor(model => model.LSTrainingCategoryID)
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBox("SelectLSTrainingCategoryID", null, new { @class = "form-control" })                                        
                                    @Html.HiddenFor(model => model.LSTrainingCategoryIDAllowNull)   
                                    @Html.HiddenFor(model => model.TrainingCategoryName)                                         
                                </div>
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.LSProviderID)
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBox("SelectLSTrainingProviderID", null, new { @class = "form-control" })                                        
                                    @Html.HiddenFor(model => model.LSProviderID)   
                                    @Html.HiddenFor(model => model.TrainingProviderName)     
                                </div>
                            </div>                                                                                    
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.RequiredLabelFor(model => model.LSTrainingTypeID)
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBox("SelectLSTrainingTypeID", null, new { @class = "form-control" })                                        
                                    @Html.HiddenFor(model => model.LSTrainingTypeIDAllowNull)   
                                    @Html.HiddenFor(model => model.TrainingTypeName)                                             
                                </div>
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.LSTrainingFormID)
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBox("SelectLSTrainingFormID", null, new { @class = "form-control" })                                        
                                    @Html.HiddenFor(model => model.LSTrainingFormID)   
                                    @Html.HiddenFor(model => model.TrainingFormName)         
                                </div>
                            </div>                
                            <div class="row">
                                 <div class="col-md-2">
                                    @Html.LabelFor(model => model.LSTrainingLocationID)
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBox("SelectLSTrainingLocationID", null, new { @class = "form-control" })                                        
                                    @Html.HiddenFor(model => model.LSTrainingLocationID)   
                                    @Html.HiddenFor(model => model.TrainingLocationName)         
                                </div>
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.LSCompanyID)                                    
                                </div>
                                <div class="col-md-4">
                                    @Html.HiddenFor(model => model.CompanyName)
                                    <select id="LSCompanyID" name="LSCompanyID" class="easyui-combotree col-md-2"></select>    
                                    <script>
                                        $(document).ready(function () {
                                            LoadComboTreeWithActionWithValue('LSCompanyID', 'GetAllWithPlease', '@Model.LSCompanyID');
                                        })
                                    </script>                                                                       
                                </div>
                            </div>                                                       
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.RequiredLabelFor(model => model.MonthYear)
                                </div>
                                <div class="col-md-2">
                                     @Html.MonthPickerNullFor(model => model.MonthYear)
                                </div>             
                                <div class="col-md-2"></div>                   
                                <div class="col-md-2">
                                    @Html.RequiredLabelFor(model => model.NumOfStaff)
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.NumOfStaffAllNull, new { @autocomplete = "off", @class = "form-control" })                                                                          
                                </div>                                
                            </div>                                                                       
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.PlanDays)
                                </div>
                                <div class="col-md-4">
                                     @Html.TextBoxFor(model => model.PlanDays, new { @autocomplete = "off", @class = "form-control", @onkeydown = "CheckNumber(this)", @onkeyup = "CheckNumber(this)" })                                                                                        
                                </div>
                                <div class="col-md-2">
                                        @Html.LabelFor(model => model.PlanHours)
                                </div>
                                <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.PlanHours, new { @autocomplete = "off", @class = "form-control" })    
                                        @Html.ValidationMessageFor(model => model.PlanHours)                                 
                                </div>
                            </div>                
                            @if (Model.Status >= 1)
                            {                                
                                <h6>@Eagle.Resource.LanguageResource.TrainingProcessOfApproval</h6>       
                                <hr />                                    
                                <div class="row">                                    
                                    <div class="col-md-12">
                                    @if (ViewBag.CommentList != null)
                                        {
                                            foreach (var commentItem in ViewBag.CommentList as List<CommentViewModel>)
                                            {
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        @Html.ImageByFileId("Photo", commentItem.AvatarId, commentItem.EmpComment, new { width = "45", height = "60", @class = "media-object img-thumbnail user-img img-rounded", @style = "float:right;" })
                                                    </div>
                                                    <div class="col-md-10">
                                                        <div>
                                                            <div class="col-md-9"><b>@commentItem.EmpComment</b></div> <div class="col-md-3"><i>@commentItem.Time</i></div>
                                                        </div>
                                                        <div>
                                                            <div class="col-md-9"> @Html.Raw(Server.HtmlDecode(commentItem.Comment))</div> <div class="col-md-3"><i>@commentItem.StatusName</i></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                      }
                                    </div>
                                </div>
                            }                              
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.Comment)
                                </div>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Comment, new { @class = "form-control" })                                    
                                </div>
                            </div>                                                             
                            <h6>@Eagle.Resource.LanguageResource.TrainingExpense</h6>
                            <hr />
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.LSTrainingExpenseID)
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("SelectLSTrainingExpenseID", null, new { @class = "form-control" })                                        
                                    @Html.HiddenFor(model => model.LSTrainingExpenseID)   
                                    @Html.HiddenFor(model => model.TrainingExpenseName)                                           
                                </div>                                                                
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.LSCurrencyID)
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("SelectLSTrainingCurrencyID", null, new { @class = "form-control" })                                        
                                    @Html.HiddenFor(model => model.LSCurrencyID)   
                                    @Html.HiddenFor(model => model.TrainingCurrencyName)                                             
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.Cost)
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBoxFor(model => model.Cost, new { @autocomplete = "off", @class = "form-control" }) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                                             
                                    <input type="button" id="btnAddExpense" value="@Eagle.Resource.LanguageResource.btnAdd" class="btn btn-info add AddModel" @ViewBag.EnableSaveAndSendForApproval/>                                                                                                          
                                </div>
                            </div>                                   
                            @if (Model.ListOfTrainingExpense != null && Model.ListOfTrainingExpense.Count > 0)
                            {
                                <div class="row">
                                    <table id="dataTable" class="use-dataTable table table-bordered table-condensed table-hover table-striped tablesorter sortableTable">
                                        <thead>
                                            <tr>
                                                <th class="text_center">
                                                    @Eagle.Resource.LanguageResource.No
                                                </th>                
                                                <th class="text_center">
                                                    @Eagle.Resource.LanguageResource.TrainingExpenseName
                                                </th>
                                                <th class="text_center">
                                                    @Eagle.Resource.LanguageResource.Costs
                                                </th>
                                                 <th class="text_center">
                                                    @Eagle.Resource.LanguageResource.Currency
                                                </th>                
                                                <th class="table-actions text_center no-sort">@Eagle.Resource.LanguageResource.Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{int i = 0;}
                                            @foreach (var item in Model.ListOfTrainingExpense)
                                            {
                                                i++;
                                                <tr>
                                                    <td>
                                                        @i
                                                    </td>
                                                    <td>
                                                        @item.TrainingExpenseName
                                                    </td>
                                                    <td>
                                                        @(item.Cost.HasValue ? item.Cost.Value.ToString("#,###") : String.Empty)
                                                    </td>
                                                    <td>
                                                        @item.TrainingCurrencyName
                                                    </td>                                       
                                                    <td class="table-actions text_center no-sort">                        
                                                        <a data-id="@item.LSTrainingExpenseID" title="Delete" class="ico deleteItem">&nbsp;&nbsp;&nbsp; </a>
                                                    </td>                                                    
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                            </div>
                            }                                                                                                                               
                            <!--/row-->
                            <hr />
                            <div class="row">
                                <div class="footbar">
                                    <input type="button" id="btnReset" value="@Eagle.Resource.LanguageResource.btnReset" class="btn btn-default reset" @ViewBag.EnableSaveAndSendForApproval />                                                                        
                                    <input type="button" id="btnAdd" value="@Eagle.Resource.LanguageResource.btnSave" class="btn btn-info add AddModel" @ViewBag.EnableSaveAndSendForApproval/>
                                    <input type="button" id="btnSendForApproval" value="@Eagle.Resource.LanguageResource.btnSendForApproval" class="btn btn-info add AddModel" @ViewBag.EnableSaveAndSendForApproval />
                                    <input type="button" id="btnApproval" value="@Eagle.Resource.LanguageResource.btnApprove" class="btn btn-info add AddModel" @ViewBag.EnableApprovalAndUnApproval />
                                    <input type="button" id="btnUnApproval" value="@Eagle.Resource.LanguageResource.btnUnapprove" class="btn btn-info add AddModel" @ViewBag.EnableApprovalAndUnApproval />
                                    <input type="button" id="btnList" value="@Eagle.Resource.LanguageResource.btnList" class="btn btn-info add AddModel">
                                </div>
                            </div>
                            <!--End.row-->
                        </div>
                     </div>
                </div>
            </div>
        </div>         
    </div>        
</form>




@*<script src="/Scripts/jquery.mtz.monthpicker.js" type="text/javascript"></script>
<script src="/Scripts/jquery.mtz.monthpicker.custom.js" type="text/javascript"></script>*@
<script>  
    InvokeMonthPicker();

    var strInputTrainingPlanExpenseName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingPlanExpenseName)';
    var strInputTrainingPlanCurrencyName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingPlanExpenseCurrencyName)';

    PopulateDropDownListAutoComplete("SelectLSTrainingExpenseID", "LSTrainingExpenseID", "TrainingExpenseName", strInputTrainingPlanExpenseName, areas + '/TrainingExpenses/DropdownList');
    PopulateDropDownListAutoComplete("SelectLSTrainingCurrencyID", "LSCurrencyID", "TrainingCurrencyName", strInputTrainingPlanCurrencyName, areas + '/LS_tblCurrency/DropdownList');

    var strInputTrainingCodeName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingCodeName)';
    var strInputTrainingCourseName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingCourse)';
    var LSTrainingCodeIDAllowNull = '@Model.LSTrainingCodeIDAllowNull';

    PopulateDropDownListAutoComplete("SelectLSTrainingCodeID", "LSTrainingCodeIDAllowNull", "TrainingCodeName", strInputTrainingCodeName, areas + '/TrainingCode/DropdownList');
    PopulateDropDownListAutoComplete("SelectLSTrainingCourseID", "LSTrainingCourseIDAllowNull", "TrainingCourseName", strInputTrainingCourseName, areas + '/TrainingCourse/DropdownList?LSTrainingCodeID=' + LSTrainingCodeIDAllowNull);

    var strInputTrainingCategoryName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingCategoryName)';
    var strInputTrainingProviderName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingProviderName)';

    PopulateDropDownListAutoComplete("SelectLSTrainingCategoryID", "LSTrainingCategoryIDAllowNull", "TrainingCategoryName", strInputTrainingCategoryName, areas + '/TrainingCategory/DropdownList');
    PopulateDropDownListAutoComplete("SelectLSTrainingProviderID", "LSProviderID", "TrainingProviderName", strInputTrainingProviderName, areas + '/TrainingProvider/DropdownList');

    var strInputTrainingTypeName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingTypeName)';
    var strInputTrainingFormName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputTrainingFormName)';
    var strInputTrainingLocationName = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputLocationName)';

    PopulateDropDownListAutoComplete("SelectLSTrainingTypeID", "LSTrainingTypeIDAllowNull", "TrainingTypeName", strInputTrainingTypeName, areas + '/TrainingType/DropdownList');
    PopulateDropDownListAutoComplete("SelectLSTrainingFormID", "LSTrainingFormID", "TrainingFormName", strInputTrainingFormName, areas + '/TrainingForm/DropdownList');
    PopulateDropDownListAutoComplete("SelectLSTrainingLocationID", "LSTrainingLocationID", "TrainingLocationName", strInputTrainingLocationName, areas + '/TrainingLocation/DropdownList');
   
    (function ($) {        

        $(document).on('change', '#SelectLSTrainingCodeID', function () {        
            var LSTrainingCodeID = $('#LSTrainingCodeIDAllowNull').val();
            $("#LSTrainingCourseIDAllowNull").val("");
            $('#LearningObjective').val("");
            PopulateDropDownListAutoComplete("SelectLSTrainingCourseID", "LSTrainingCourseIDAllowNull", "TrainingCourseName", strInputTrainingCourseName, areas + '/TrainingCourse/DropdownList?LSTrainingCodeID=' + LSTrainingCodeID);
        });

        $('#SelectLSTrainingCodeID').on("select2-removed", function (e) {
            $('#LSTrainingCourseIDAllowNull').val('');
            $('#TrainingCourseName').val('');       
        });
    
        $(document).on('change', '#SelectLSTrainingCourseID', function () {        
            var LSTrainingCourseID = $("#LSTrainingCourseIDAllowNull").val();
            $.ajax({
                type: "GET",
                url: areas + '/TrainingPlan/GetLearningObjective?LSTrainingCourseID=' + LSTrainingCourseID,
                success: function (data) {                
                    $('#LearningObjective').val(data);
                }
            });
        });
        $('#SelectLSTrainingCourseID').on("select2-removed", function (e) {        
            $('#LearningObjective').val('');
        });     
    })(jQuery);
</script>

