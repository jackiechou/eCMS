@model Eagle.Model.SalaryCoefViewModels

<form id="frmAdd" class="form-horizontal">
    @Html.HiddenFor(model => model.SalaryID)
    @Html.Action("GetEmployeeInfo", "Employee", null)
    <div id="alertMessageBox">
        @if (ViewBag.DisplayErrorMessage == true)
        {
            <div class="@ViewBag.CssClass">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>@ViewBag.SortMessage !</strong>
                <div class="padding-left">
                    @Html.Raw(Server.HtmlDecode(ViewBag.Message))
                </div>
            </div>
        }
    </div>
    <div class="box">
        <div class="row">

            <div id="right_accordion" class="accordion-group">
                <div class="accordion-heading toolbar">
                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#form_accordion">
                        <span class="pull-right"><i class="glyphicon glyphicon-chevron-up icon-white"></i></span>
                        <span class="heading-tite">Input region</span>
                    </a>
                </div>
                <div id="form_accordion" class="accordion-body collapse in">
                    <div class="accordion-inner">
                        <div class="accordion-content">
                            <!--start row-->
                            <div class="row">
                                <div class="col-md-3">
                                    @Html.RequiredLabelFor(model => model.dEffectiveDate)
                                </div>
                                <div class="col-md-3">
                                    @Html.Datepicker2For(model => model.dEffectiveDate, "dd/MM/yyyy", new { @name = "strEffectiveDate" })
                                    @Html.ValidationMessageFor(model => model.dEffectiveDate)
                                </div>
                               <div class="col-md-3">
                                    @Html.RequiredLabelFor(model => model.SalaryScaleID)
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("SelectSalaryScaleID", null, new { @class = "form-control" })
                                    @Html.HiddenFor(model => model.SalaryScaleID)
                                    @Html.HiddenFor(model => model.ScaleName)
                                </div>
                            </div>
                            <!--end row-->
                            <!--start row-->
                            <div class="row">
                                 <div class="col-md-3">
                                    @Html.RequiredLabelFor(model => model.SalaryGradeID)
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("SelectSalaryGradeID", null, new { @class = "form-control" })
                                    @Html.HiddenFor(model => model.SalaryGradeID)
                                    @Html.HiddenFor(model => model.GradeName)
                                </div>
                                
                                <div class="col-md-3">
                                    @Html.RequiredLabelFor(model => model.SalaryRankID)
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("SelectSalaryRankID", null, new { @class = "form-control" })
                                    @Html.HiddenFor(model => model.SalaryRankID)
                                    @Html.HiddenFor(model => model.RankName)
                                </div>
                            </div>
                            <!--end row-->
                            <!--start row-->
                            <div class="row">
                                <div class="col-md-3">
                                    @Html.RequiredLabelFor(model => model.BasicCoef)
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBoxFor(model => model.BasicCoef, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BasicCoef)
                                </div>
                                <div class="col-md-3">
                                    @Html.RequiredLabelFor(model => model.PercentBasicCoef)
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBoxFor(model => model.PercentBasicCoef, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PercentBasicCoef)
                                </div>

                            </div>
                            <!--end row-->
                            <!--start row-->
                            <div class="row">
                                <div class="col-md-3">
                                    @Html.RequiredLabelFor(model => model.ActualCoef)
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBoxFor(model => model.ActualCoef, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ActualCoef)
                                </div>
                                <div class="col-md-3">
                                    @Html.RequiredLabelFor(model => model.InsuranceSalary)
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBoxFor(model => model.InsuranceSalary, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.InsuranceSalary)
                                </div>
                            </div>
                            <!--end row-->
                            <!--start row-->
                            <div class="row">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Note)
                                </div>
                                <div class="col-md-9">
                                    @Html.TextAreaFor(model => model.Note, new { @autocomplete = "off", @placeholder = @Eagle.Resource.LanguageResource.Note, @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Note)
                                </div>
                            </div>
                            <!--end row-->
                        </div>
                    </div>
                    <!--row button-->
                    <div class="row">
                        <div class="footbar">
                            <div>
                                <input class="btn btn-default reset ResetModel" type="button" id="btnResetCoef" value="@Eagle.Resource.LanguageResource.btnReset" />
                                <input class="btn btn-info add AddModel" type="button" id="btnAddCoef" value="@Eagle.Resource.LanguageResource.btnSave" />
                            </div>
                        </div>
                    </div>
                    <!--End.row-->
                </div>
            </div>
        </div>
    </div>
</form>
<script>
    InvokeDateTimePicker();
</script>

<script>
    var strInput = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputScale)';
    PopulateDropDownListAutoComplete("SelectSalaryScaleID", "SalaryScaleID", "ScaleName", strInput, areas + '/Scale/DropdownList');

    var strInputGrade = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputGrade)';
    PopulateDropDownListAutoComplete("SelectSalaryGradeID", "SalaryGradeID", "GradeName", strInputGrade, areas + '/Grade/DropdownList');

    var strInputRank = '@Html.Raw(Eagle.Resource.LanguageResource.PleaseInputSalaryRank)';
    PopulateDropDownListAutoComplete("SelectSalaryRankID", "SalaryRankID", "RankName", strInputRank, areas + '/Rank/DropdownList');

</script>
