@model IEnumerable<Eagle.Model.SYS.FileViewModel>
<div id="MainBody">
    <div id="divList">
        <div class="table datatable">
            <table id="dataTable" class="use-dataTable table table-bordered table-condensed table-hover table-striped tablesorter sortableTable">
               @* <thead>
                    <tr>
                        <th class="text_center">@Eagle.Resource.LanguageResource.No</th>              
                        <th>
                            @Html.DisplayNameFor(model => model.FileTitle)
                        </th>             
                        <th class="table-actions text_center no-sort">@Eagle.Resource.LanguageResource.Actions</th>
                    </tr>
                </thead>*@
                <tbody>
                    @{int i = 0;}
                    @foreach (var item in Model)
                    {
                        i++;
                        <tr id="@item.FileId">
                            <td style="width:20px" class="text_center">
                                @i
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FileTitle)  
                            </td>                   
                            <td style="width:50px" class="table-actions text_center center no-sort">
                                <a data-id="@item.FileId" data-list="@item.FileIds" title="Edit" class="ico editItem">&nbsp;&nbsp;&nbsp;</a>
                                <a data-id="@item.FileId" data-list="@item.FileIds" title="Delete" class="ico deleteItem">&nbsp;&nbsp;&nbsp;</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">
    (function ($) {
        $.createDataBuilder = function (p) {
            var FileMgr = {
                config: {
                    isPostBack: false,
                    async: true,
                    cache: false,
                    processData: false,
                    mimeType: "multipart/form-data",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: '{}',
                    dataType: 'json',
                    baseURL: p.BaseURL,
                    method: "",
                    url: "",
                    ajaxCallMode: 0,
                    isValid: false,
                    mode: 0,
                    key: 0,
                    ContainerClientID: p.ContainerClientID
                },
                messages:
                {
                    nomenu: "No Data"
                },
                init: function (config) {              
                    FileMgr.InitializeCotrols();
                    FileMgr.BindEvents();
                },
                ajaxSuccess: function (data) {
                    if (data.message == "timeout")
                        window.location.reload();
                    else {
                        switch (parseInt(FileMgr.config.ajaxCallMode)) {                           
                            case 1:
                                FileMgr.BindDetails(data);
                                break;
                            case 2:
                                FileMgr.ReloadData(data);
                                break;
                        }
                    }
                },
                ajaxFailure: function (jqXHR, textStatus, errorThrown) {
                    handleAjaxErrors(jqXHR, textStatus, errorThrown);
                },
                ajaxCall: function (config) {
                    $.ajax({
                        type: FileMgr.config.type,
                        contentType: FileMgr.config.contentType,
                        cache: FileMgr.config.cache,
                        url: FileMgr.config.url,
                        data: FileMgr.config.data,
                        dataType: FileMgr.config.dataType,
                        success: FileMgr.ajaxSuccess,
                        error: FileMgr.ajaxFailure,
                        async: false
                    });
                },              
                InitializeCotrols: function () { 
                    FileMgr.RemoveQtip();
                    //$("#modalEdit").draggable('disable');
                },
                RemoveQtip: function () {
                    $('span.error:first').qtip("hide");
                    $(".qtip").remove();
                },
                BindEvents: function () {
                    //Add and update post action
                    $(document).on("click", "#btnAdd", function () {
                        if (!$("#myform").valid()) { // Not Valid                          
                            return false;
                        } else {
                            FileMgr.RemoveQtip();
                          FileMgr.AddData();                           
                        }
                    });

                    $(document).on("click", "#btnEdit", function () {
                        if (!$("#myform").valid()) { // Not Valid                           
                            return false;
                        } else {
                            FileMgr.RemoveQtip();                          
                            FileMgr.UpdateData();                          
                        }
                    });


                    // Reset form
                    $(document).on("click", "#btnReset", function () {
                        FileMgr.ResetControls();
                    });

                    // Click edit (get)
                    $(document).on("click", ".editItem", function () {
                        var ID = $(this).data('id');  // ID cua dong du lieu                      
                        FileMgr.GetDetails(ID);

                        //Go to top
                        $('html, body').animate({ scrollTop: 0 }, 'fast');
                        return false;
                    });

                    // Click delete (get)
                    $(document).on("click", ".deleteItem", function (e) {
                        var ID = $(this).data('id');  // ID cua dong du lieu

                        bootbox.confirm("@Html.Raw(Eagle.Resource.LanguageResource.DoYouWantToContinue)", function (result) {
                            if (result) {
                                FileMgr.DeleteFileInFileList(ID);
                                return false;
                            }
                        });                      
                    });

                },                 
                ConvertFormToJSON: function (form) {
                    var array = $("#" + form).serializeArray();
                    var json = {};
                    $.each(array, function () {
                        json[this.name] = this.value || '';
                    });
                    return JSON.stringify(json);
                },
                GetDownloadFileList: function (FileIds) {
                    var FileIds = '';
                    FileMgr.config.mode = 0;
                    var data = { FileIds: FileIds };
                    this.config.method = "GetDownloadFileList";
                    this.config.data = data;
                    this.config.type = "GET";
                    this.config.dataType = "html";
                    this.config.url = this.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 0;
                    this.ajaxCall(this.config);
                },
                AddFileToFileList: function () {
                    FileMgr.config.mode = 1;
                    var data = { FileId: FileId, FileIds: FileIds };
                    this.config.method = "AddFileToFileList";
                    this.config.data = data;
                    this.config.url = FileMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },               
                GetDetails: function (id) {
                    FileMgr.config.mode = 2;
                    FileMgr.config.key = id;
                    var data = { id: id };
                    this.config.method = "Edit";
                    this.config.data = data;
                    this.config.type = "GET";
                    this.config.dataType = "html";
                    this.config.url = this.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 1;
                    this.ajaxCall(this.config);
                },
                BindDetails: function (data) {
                    $('#divEdit').html(data);
                    FileMgr.InitializeCotrols();
                },
                UpdateData: function () {
                    var data = FileMgr.ConvertFormToJSON("myform");
                    this.config.method = "Edit";
                    this.config.type = "POST";
                    this.config.dataType = "json";
                    this.config.data = data;
                    this.config.url = FileMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },               
                DeleteFileInFileList: function (Id, FileId) {
                    var data = { "Id": Id, FileId: FileId };
                    FileMgr.config.mode = 3;
                    this.config.method = "DeleteFileInFileList";
                    this.config.data = data;
                    this.config.url = FileMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                ReloadData: function (data) {
                    var mode = FileMgr.config.mode;
                    var titleSuccess = "", titleFailure = "", titleAjaxError = "";
                    titleAjaxError = "@Eagle.Resource.LanguageResource.Error";
                    if (mode == 0) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.CreateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.CreateFailure";
                    }
                    else if (mode == 1) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.UpdateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.UpdateFailure";
                    } else if (mode == 2) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.DeleteSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.DeleteFailure";
                    } else {
                         titleSuccess = "@Eagle.Resource.LanguageResource.UpdateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.UpdateFailure";
                    }

                    var result = JSON.parse(data);                   
                    if (result.flag == 'true') {
                        var FileIdListString = $('.editItem').data('list');                        
                        var FileIdArray = FileIdListString.split(',');
                        if (FileIdArray.length > 0) {
                            var affectedId = result.message;
                            for (var i = FileIdArray.length - 1; i >= 0; i--) { 
                                if (FileIdArray[i] == affectedId) {
                                    FileIdArray.splice(i, 1);
                                }
                            }
                        }

                        //Reload page after success
                        this.config.method = "GetList";
                        var data = { FileIds: FileIdArray.toString() };
                        alert(data);

                        $.ajax({
                            type: "GET",
                            dataType: "html",
                            url: FileMgr.config.baseURL + this.config.method,
                            success: function (data, statusCode, xhr) {
                                if (data.message == "timeout") {
                                    window.location.reload();
                                } else {
                                    $('#' + FileMgr.config.ContainerClientID).html(data);
                                    FileMgr.InitializeCotrols();
                                    showMessageWithTitle(titleSuccess, result.message, "success", 20000);
                                }
                            }, error: function (jqXHR, textStatus, errorThrown) {
                                handleAjaxErrors(jqXHR, textStatus, errorThrown);
                            }
                        });
                    } else {
                        showMessageWithTitle(titleFailure, result.message, "error");
                        hideMessageWithTitle(20000);
                    }
                },
                ResetControls: function () {
                    var mode = FileMgr.config.mode;
                    if (mode == 0) {
                        var validateObj = $('#myform');
                        validateObj.find('input:text, input:password, input:file, select, textarea').not('.ignored').val('');
                        validateObj.find('input:radio, input:checkbox').removeAttr('checked').removeAttr('selected');
                        validateObj.find('input[type="number"]').val(0);
                        validateObj.find('select').find('option:first').attr('selected', true).siblings().attr('selected', false);
                        validateObj.find("[data-valmsg-summary=true]").removeClass("validation-summary-errors").addClass("validation-summary-valid").find("ul").empty();
                        validateObj.find("[data-valmsg-replace]").removeClass("field-validation-error").addClass("field-validation-valid").empty();
                        FileMgr.InitializeCotrols();
                    } else {
                        var key = FileMgr.config.key;
                        FileMgr.GetDetails(key);
                    }
                },
            };
            FileMgr.init();
        }

        var Controller = 'Qualification';
        var BaseURL = areas + "/" + Controller + "/";
        var base_settings = {
            ContainerClientID: "MainBody",
            BaseURL: BaseURL
        };
        $.createDataBuilder(base_settings);
    })(jQuery);
</script>
