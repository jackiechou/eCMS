@{
    ViewBag.Title = Eagle.Resource.LanguageResource.Qualification;
    Layout = Request.IsAjaxRequest() ? null : Eagle.Repository.UI.Layout.LayoutType.MainLayout; 
}
@model List<Eagle.Model.HR.QualificationViewModel>
@section ContentSection
{
    <div id="MainBody" class="main_box">
        @Html.Partial("../Hr/Qualification/_Reset")
    </div>
}

<link href="~/Scripts/plugins/tablednd/tablednd_custom.css" rel="stylesheet" />
<script src="~/Scripts/plugins/tablednd/js/jquery.tablednd.js"></script>
<script type="text/javascript"> 
    (function ($) {
        $.createDataBuilder = function (p) {
            var DataMgr = {
                config: {
                    isPostBack: false,
                    async: true,
                    cache: false,
                    processData: false,
                    mimeType: "multipart/form-data",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: '{}',
                    dataType: 'json',
                    baseURL: p.BaseURL,
                    method: "",
                    url: "",
                    ajaxCallMode: 0,
                    isValid: false,
                    mode: 0,
                    key:0,
                    ContainerClientID: p.ContainerClientID                   
                },
                messages:
                {
                    nomenu: "No Data"
                },
                init: function (config) {
                    DataMgr.InitializeCotrols();
                    DataMgr.BindEvents();
                },
                ajaxSuccess: function (data) {
                    if (data.message == "timeout")
                        window.location.reload();
                    else {
                        switch (parseInt(DataMgr.config.ajaxCallMode)) {
                            //case 0:
                            //    DataMgr.GetList();
                            case 1:
                                DataMgr.BindDetails(data);
                                break;
                            case 2:
                                DataMgr.ReloadData(data);
                                break;
                        }
                    }
                },
                ajaxFailure: function (jqXHR, textStatus, errorThrown) {
                    handleAjaxErrors(jqXHR, textStatus, errorThrown);
                },
                ajaxCall: function (config) {
                    $.ajax({
                        type: DataMgr.config.type,
                        contentType: DataMgr.config.contentType,
                        cache: DataMgr.config.cache,
                        url: DataMgr.config.url,
                        data: DataMgr.config.data,
                        dataType: DataMgr.config.dataType,
                        success: DataMgr.ajaxSuccess,
                        error: DataMgr.ajaxFailure,
                        async: false
                    });
                },
                InitializeCotrols: function () {
                    if (DataMgr.config.mode == 0) {
                        InvokeDataTables();
                        DataMgr.GenerateCode();
                    }

                    ShowDateTimePicker();
                    $.validator.methods["date"] = function (value, element) { return true; }
                    InvokeMonthPicker();
                    DataMgr.RemoveQtip();
                    DataMgr.DragNDrop();
                    DataMgr.HandleCheckBoxEvent("PayByCompany");
                   //ListCountries ***********************************************************************************************************************
                    BindAutoCompleteSelect2('@Url.Action("DropdownList", "LS_tblCountry")',
                        'selectLSCountryID', '@Html.Raw(Eagle.Resource.LanguageResource.PleaseSelectAnItem)', 'LSCountryID', 'LSCountryName');

                    //ListSchools *************************************************************************************************************************
                    BindAutoCompleteSelect2('@Url.Action("DropdownList", "LS_tblSchool")',
                        'selectLSSchoolID', '@Html.Raw(Eagle.Resource.LanguageResource.PleaseSelectAnItem)', 'LSSchoolID', 'LSSchoolName');

                    //ListFaculties ***********************************************************************************************************************
                    BindAutoCompleteSelect2('@Url.Action("DropdownList", "LS_tblFaculty")',
                        'selectLSFacultyID', '@Html.Raw(Eagle.Resource.LanguageResource.PleaseSelectAnItem)', 'LSFacultyID', 'LSFacultyName');

                    //ListMajorSubjects *******************************************************************************************************************
                    BindAutoCompleteSelect2('@Url.Action("DropdownList", "LS_tblMajor")',
                        'selectLSMajorID', '@Html.Raw(Eagle.Resource.LanguageResource.PleaseSelectAnItem)', 'LSMajorID', 'LSMajorName');

                    //ListTrainingTypes *******************************************************************************************************************
                    BindAutoCompleteSelect2('@Url.Action("DropdownList", "LS_tblTrainingType")',
                        'selectLSTrainingTypeID', '@Html.Raw(Eagle.Resource.LanguageResource.PleaseSelectAnItem)', 'LSTrainingTypeID', 'LSTrainingTypeName');
                    //*************************************************************************************************************************************

                    $(document).on('change', '#TrainingPlace', function () {
                        $(this).find("option[value=" + $(this).val() + "]").attr('selected', true).siblings().attr('selected', false);
                        if ($(this).val() == 2)
                            $("#divCountries").show();
                        else
                            $("#divCountries").hide();
                    });                    
                  
                    $("#modalEdit").draggable({ handle: ".modal-header" });
                },
                RemoveQtip: function () {
                    $('span.error:first').qtip("hide");
                    $(".qtip").remove();
                },
                BindEvents: function () {  
                    $(document.body).on('keyup', '#QualificationNo', function (event) {
                        DataMgr.ValidateCode();
                    });


                    $('#Note').keypress(function () {
                        if (this.value.length >= 150)
                            return false;
                    });

                    //Add and update post action
                    $(document).on("click", "#btnAdd", function () {
                        if (!$("#myform").valid()) { // Not Valid
                            return false;
                        } else {
                            DataMgr.RemoveQtip();
                            //Add new Item
                            if ($('input[type="file"]').val() != '') {
                                var fileInputId = 'FileUpload';
                                var folderKey = 'UPLOAD_DOCUMENT_DIR';
                                var width = null;
                                var height = null;
                                var fileId = null;

                                var formData = new FormData();
                                formData.append('fileKey', fileInputId);
                                formData.append('FileUpload', $('input[type=file]')[0].files[0]);
                                formData.append('folderKey', folderKey);
                                if (width != null && width > 0)
                                    formData.append('width', width);
                                if (height != null && height > 0)
                                    formData.append('height', height);
                                if (fileId != null && fileId > 0)
                                    formData.append('fileId', fileId);

                                var baseUrl = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');

                                $.ajax({
                                    type: "POST",
                                    url: baseUrl + "/Handlers/UploadFile.ashx",
                                    contentType: false,
                                    processData: false,
                                    data: formData,
                                    success: function (result) {
                                        $("input[name=FileId]:hidden").val(result);
                                        var data = DataMgr.ConvertFormToJSON("myform");
                                        DataMgr.AddData(data);
                                    },
                                    error: function () {
                                        showMessageWithTitle('error', '@Html.Raw(Eagle.Resource.LanguageResource.UploadFileError)', "error", 3000);
                                    }
                                });
                            } else {
                                var data = DataMgr.ConvertFormToJSON("myform");
                                DataMgr.AddData(data);
                            }
                        }
                    });

                    $(document).on("click", "#btnEdit", function () {
                        if (!$("#myform").valid()) { // Not Valid
                            return false;
                        } else {
                            DataMgr.RemoveQtip();
                            // Update Item
                            if ($('input[type="file"]').val() != '') {
                                var fileInputId = 'FileUpload';
                                var folderKey = 'UPLOAD_DOCUMENT_DIR';
                                var width = null;
                                var height = null;
                                var fileId = $("#FileId").val();


                                var formData = new FormData();
                                formData.append('fileKey', fileInputId);
                                formData.append('FileUpload', $('input[type=file]')[0].files[0]);
                                formData.append('folderKey', folderKey);
                                if (width != null && width > 0)
                                    formData.append('width', width);
                                if (height != null && height > 0)
                                    formData.append('height', height);
                                if (fileId != null && fileId > 0)
                                    formData.append('fileId', fileId);

                                var baseUrl = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');

                                $.ajax({
                                    type: "POST",
                                    url: baseUrl + "/Handlers/UploadFile.ashx",
                                    contentType: false,
                                    processData: false,
                                    data: formData,
                                    success: function (result) {
                                        if (result >= 1) {
                                            $("input[name=FileId]:hidden").val(result);
                                            var data = DataMgr.ConvertFormToJSON("myform");
                                            DataMgr.UpdateData(data);
                                        }
                                    },
                                    error: function () {
                                        showMessageWithTitle('error', '@Html.Raw(Eagle.Resource.LanguageResource.UploadFileError)', "error", 3000);
                                    }
                                });
                            } else {
                                var data = DataMgr.ConvertFormToJSON("myform");
                                DataMgr.UpdateData(data);
                            }
                        }
                    });


                    // Reset form
                    $(document).on("click", "#btnReset", function () {                        
                        DataMgr.ResetControls();
                    });

                    // Click edit (get)
                    $(document).on("click", ".editItem", function () {
                        var ID = $(this).data('id');  // ID cua dong du lieu                       
                        DataMgr.GetDetails(ID);

                        //Go to top
                        $('html, body').animate({ scrollTop: 0 }, 'fast');
                        return false;
                    });

                    // Click delete (get)
                    $(document).on("click", ".deleteItem", function (e) {
                        var ID = $(this).data('id');  // ID cua dong du lieu
                        bootbox.confirm("@Html.Raw(Eagle.Resource.LanguageResource.DoYouWantToContinue)", function (result) {
                            if (result) {
                                DataMgr.config.mode = 2;
                                DataMgr.DeleteData(ID);
                                return false;
                            }
                        });
                    });

                },
                HandleCheckBoxEvent: function (checkFieldId) {
                    var name = $("#" + checkFieldId).attr("name");
                    var checkBoxSelector = $("input:checkbox[name=" + name + "]");
                    var hiddenSelector = $("input:hidden[name=" + name + "]");
                    var chkStatus = checkBoxSelector.is(":checked");


                    checkBoxSelector.attr("checked", chkStatus);
                    checkBoxSelector.val(chkStatus);
                    hiddenSelector.val(chkStatus);

                    checkBoxSelector.click(function () {
                        var checkBoxStatus = $(this).is(":checked");
                        checkBoxSelector.attr("checked", checkBoxStatus);
                        checkBoxSelector.val(checkBoxStatus);
                        hiddenSelector.val(checkBoxStatus);
                    });
                },
                ConvertFormToJSON: function (form) {
                    var array = $("#" + form).serializeArray();
                    var json = {};
                    $.each(array, function () {
                        json[this.name] = this.value || '';
                    });
                    return JSON.stringify(json);
                },
                BindDetails: function (data) {
                    $('#divEdit').html(data);
                    DataMgr.InitializeCotrols();   
                },
                GenerateCode: function () {                    
                    $.getJSON('@Url.Action("GenerateCode", "Qualification")',
                        function (data) {
                            $("#QualificationNo").val(data);
                        });
                },
                ValidateCode: function () {
                    var params = {};
                    params.Code = $('#QualificationNo').val();
                    $.getJSON('@Url.Action("ValidateCode", "Qualification")', params,
                         function (data) {                          
                             if (data == true)
                                 ShowToolTip('QualificationNo', '@Html.Raw(Eagle.Resource.LanguageResource.InValid)');
                             else
                                 CloseToolTip('QualificationNo');
                         });
                 },
                AddData: function (data) {
                    this.config.method = "Create";
                    this.config.data = data;
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                GetDetails: function (id) {
                    DataMgr.config.mode = 1;
                    DataMgr.config.key = id;
                    var data = { "id": id };
                    this.config.method = "Edit";
                    this.config.data = data;
                    this.config.type = "GET";
                    this.config.dataType = "html";
                    this.config.url = this.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 1;
                    this.ajaxCall(this.config);
                },
                UpdateData: function (data) {
                    this.config.method = "Edit";
                    this.config.type = "POST";
                    this.config.dataType = "json";
                    this.config.data = data;
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                DeleteData: function (ID) {
                    this.config.method = "Delete";
                    this.config.data = JSON.stringify({ "id": ID });
                    this.config.url = DataMgr.config.baseURL + this.config.method + "/" + ID;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                ReloadData: function (data) {
                    var mode = DataMgr.config.mode;
                    var titleSuccess = "", titleFailure = "", titleAjaxError = "";
                    titleAjaxError = "@Eagle.Resource.LanguageResource.Error";
                    if (mode == 0) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.CreateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.CreateFailure";
                    }
                    else if (mode == 1) {
                        titleSuccess = "@Eagle.Resource.LanguageResource.UpdateSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.UpdateFailure";
                    }
                    else {
                        titleSuccess = "@Eagle.Resource.LanguageResource.DeleteSuccess";
                        titleFailure = "@Eagle.Resource.LanguageResource.DeleteFailure";
                    }

                    var result = JSON.parse(data);
                    // var result = $.parseJSON(data);
                    if (result.flag == 'true') {
                        //Reload page after success
                        this.config.method = "Index";
                        $.ajax({
                            type: "GET",
                            url: DataMgr.config.baseURL + this.config.method,
                            statusCode: {
                                401: function () {
                                    window.location.reload();
                                },
                                403: function () {
                                    window.location.reload();
                                },
                                590: function () {
                                    window.location.reload();
                                }
                            },
                            success: function (data, statusCode, xhr) {
                                if (data.message == "timeout")
                                    window.location.reload();
                                else {
                                    $('#' + DataMgr.config.ContainerClientID).html(data);
                                    DataMgr.InitializeCotrols();
                                    showMessageWithTitle(titleSuccess, result.message, "success", 3000);
                                }
                            }, error: function (jqXHR, textStatus, errorThrown) {
                                handleAjaxErrors(jqXHR, textStatus, errorThrown);
                            }
                        });
                    } else {
                        showMessageWithTitle(titleFailure, result.message, "error");
                        hideMessageWithTitle(20000);
                    }
                },
                ResetControls: function () {
                    var mode = DataMgr.config.mode;                   
                    if (mode == 0) {
                        var validateObj = $('#myform');
                        validateObj.find('input:text, input:password, input:file, select, textarea').not('.ignored').val('');
                        validateObj.find('input:radio, input:checkbox').removeAttr('checked').removeAttr('selected');
                        validateObj.find('input[type="number"]').val(0);
                        validateObj.find('select').find('option:first').attr('selected', true).siblings().attr('selected', false);
                        validateObj.find("[data-valmsg-summary=true]").removeClass("validation-summary-errors").addClass("validation-summary-valid").find("ul").empty();
                        validateObj.find("[data-valmsg-replace]").removeClass("field-validation-error").addClass("field-validation-valid").empty();
                        DataMgr.InitializeCotrols();
                    } else {                       
                        var key = DataMgr.config.key;
                        DataMgr.GetDetails(key);
                    }
                },
                UpdateListOrder: function (id, listorder) {
                    this.config.method = "UpdateListOrder";
                    this.config.type = "POST";
                    this.config.dataType = "json";
                    this.config.data = JSON.stringify({ "id": id, "listorder": listorder });
                    this.config.url = DataMgr.config.baseURL + this.config.method;
                    this.config.ajaxCallMode = 2;
                    this.ajaxCall(this.config);
                },
                DragNDrop: function () {
                    //Important: Phai set id cho tr => tr-id
                    // Initialise the second table specifying a dragClass and an onDrop function that will display an alert
                    $("#dataTable").tableDnD({
                        onDragClass: "myDragClass",
                        onDrop: function (table, row) {
                            var rows = table.tBodies[0].rows;
                            var debugStr = "Row dropped was " + row.id + ". New order: ";
                            for (var i = 0; i < rows.length; i++) {
                                DataMgr.UpdateListOrder(rows[i].id, i + 1);
                                debugStr += rows[i].id + " ";
                            }
                            //$("#debugArea").html(debugStr);
                        },
                        //onDragStart: function (table, row) {
                           // $("#debugArea").html("Started dragging row " + row.id);
                        //}
                    });

                    $("#dataTable tr").hover(function () {
                        $(this.cells[0]).addClass('showDragHandle');
                    }, function () {
                        $(this.cells[0]).removeClass('showDragHandle');
                    });

                    // Setup the "Up" links
                    $(".rowUp").click(function () {
                        var row = $(this).closest("tr");
                        var table = row.parents('table');

                        // Get the previous element in the DOM
                        var previous = row.prev();

                        // Check to see if it is a row
                        if (previous.is("tr")) {
                            // Move row above previous
                            row.detach();
                            previous.before(row);

                            // draw the user's attention to it
                            row.fadeOut();
                            row.fadeIn();
                        }
                        // else - already at the top
                        GetSortableOrderingTable(table.attr("id"), row.attr("id"));

                    });

                    // Setup the "Up" links
                    $(".rowDown").click(function () {
                        var row = $(this).closest("tr");
                        var table = row.parents('table');

                        // Get the previous element in the DOM
                        var next = row.next();

                        // Check to see if it is a row
                        if (next.is("tr")) {
                            // Move row above previous
                            row.detach();
                            next.after(row);

                            // draw the user's attention to it
                            row.fadeOut();
                            row.fadeIn();
                        }
                        // else - already at the bottom   	

                        DataMgr.GetSortableOrderingTable(table.attr("id"), row.attr("id"));
                    });
                },
                GetSortableOrderingTable: function (selected_table, selected_row) {
                    var table = $('#' + selected_table)[0];
                    var row = $('#' + selected_row)[0];
                    var rows = table.tBodies[0].rows;

                    var debugStr = "Row dropped was " + row.id + ". New order: ";

                    for (var i = 0; i < rows.length; i++) {
                        DataMgr.UpdateListOrder(rows[i].id, i + 1);
                        debugStr += rows[i].id + " ";
                    }
                   // $("#debugArea").html(debugStr);
                },
                SortList: function () {
                    $(".sortable").sortable({
                        placeholder: "ui-state-highlight",
                        helper: 'clone',
                        sort: function (e, ui) {
                            $(ui.placeholder).html(Number($(".sortable > li:visible").index(ui.placeholder)) + 1);
                        },
                        update: function (event, ui) {
                            var lis = $(this).children('li');
                            lis.each(function () {
                                var lis = $(this);
                                var newVal = $(this).index() + 1;
                                $(this).find('div.sortable-number').html(newVal);
                            });

                            //  var ordering = $(this).sortable('toArray').toString();
                            var ordering = $(".sortable").sortable('serialize');
                           // alert(ordering);
                        }
                    });
                    $(".sortable").disableSelection();
                    //$(".sortable li").hover(function () {
                    //    $(this).css('border', '3px solid black');
                    //});
                }
            };
            DataMgr.init();
        }

        var Controller = 'Qualification';
        var BaseURL = areas + "/" + Controller + "/";
        var base_settings = {
            ContainerClientID: "MainBody",
            BaseURL: BaseURL
        };
        $.createDataBuilder(base_settings);

    })(jQuery);

    //******************************************************************************************************
    //VALIDATION FORM **************************************************************************************
    //******************************************************************************************************
    //$.validator.addMethod("valueNotEquals", function (value, element, arg) {
    //    return arg != value;
    //}, "Please select an item");

    //$.validator.addMethod("validateCompareDate", function (value, element) {
    //    var isValid = false;
    //    if ($("#FromDate").val() != null && $("#FromDate").val() != "") {
    //        var FromDate = $("#FromDate").val().split("/");
    //        var ToDate = $("#ToDate").val().split("/");

    //        var _FromDate = new Date(FromDate[2], FromDate[0] - 1, FromDate[1]);
    //        var _ToDate = new Date(ToDate[2], ToDate[0] - 1, ToDate[1]);

    //        if (_FromDate > _ToDate)
    //            isValid = true;
    //        else
    //            isValid = false;
    //    }
    //    return isValid;
    //}, "Please pick start date must be before end date");


    //$('#myform').validate(
    //{
    //    errorClass: 'error',
    //    validClass: 'valid',
    //    rules: {
    //        QualificationCode: {
    //            required: true
    //        },
    //        Position: {
    //            required: true
    //        },
    //        QualificationName: {
    //            required: true
    //        },
    //        MainWork: {
    //            required: true
    //        },
    //        FromMonthPicker: {
    //            required: false,
    //            validateCompareDate: true
    //        },
    //        ToMonthPicker: {
    //            required: false,
    //            validateCompareDate: true
    //        },
    //        message: {
    //            QualificationCode: "[QualificationCode] - Please fill in the blank",
    //            Position: "[Position] - Please fill in the blank",
    //            QualificationName: "[QualificationName] - Please fill in the blank",
    //            MainWork: "[MainWork] - Please fill in the blank",
    //            //FromMonthPicker: {
    //            //    validateCompareDate: "[FromMonth] - Please pick start date must be before end date"
    //            //},
    //            //ToMonthPicker: {
    //            //    validateCompareDate: "[ToMonth] - Please pick start date must be before end date"
    //            //}
    //        }
    //    },
    //    success: function (element) {
    //        element
    //        .closest('.control-group').removeClass('error').addClass('success');

    //        //element
    //        //.addClass('valid')
    //        //.closest('.control-group').removeClass('error').addClass('success');
    //        // Use a mini timeout to make sure the tooltip is rendred before hiding it
    //        //setTimeout(function () {
    //        //    myForm.find('.valid').qtip('destroy');
    //        //}, 1);
    //    },highlight: function (element) {
    //        $(element).closest('.control-group').removeClass('success').addClass('error');
    //    },
    //    unhighlight: function (element) {
    //        $(element).closest('.control-group').removeClass('error').addClass('success');
    //    },
    //    submitHandler: function (form) { // for demo
    //       // alert('valid form');
    //        return false;
    //    }
    //});
    //******************************************************************************************************
    //ENDING VALIDATION FORM *******************************************************************************
    //******************************************************************************************************

</script>